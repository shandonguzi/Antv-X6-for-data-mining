(function(){"use strict";var t={74638:function(t,e,a){var o=a(49242),l=a(73396);const s={key:0},n={key:1};function i(t,e,a,i,d,c){const u=(0,l.up)("test-navi"),g=(0,l.up)("router-view");return(0,l.wg)(),(0,l.iD)(l.HY,null,[t.$route.meta.keepAlive?((0,l.wg)(),(0,l.iD)("div",s,[(0,l.Wm)(u),(0,l.Wm)(g,null,{default:(0,l.w5)((({Component:t})=>[(0,l.Wm)(o.uT,null,{default:(0,l.w5)((()=>[((0,l.wg)(),(0,l.j4)(l.Ob,null,[((0,l.wg)(),(0,l.j4)((0,l.LL)(t)))],1024))])),_:2},1024)])),_:1})])):(0,l.kq)("",!0),t.$route.meta.keepAlive?(0,l.kq)("",!0):((0,l.wg)(),(0,l.iD)("div",n,[(0,l.Wm)(g)]))],64)}const d={class:"logo"};function c(t,e,a,o,s,n){const i=(0,l.up)("laptop-outlined"),c=(0,l.up)("el-text"),u=(0,l.up)("a-col"),g=(0,l.up)("router-link"),h=(0,l.up)("a-menu-item"),r=(0,l.up)("user-outlined"),m=(0,l.up)("a-sub-menu"),p=(0,l.up)("a-menu"),f=(0,l.up)("a-row"),_=(0,l.up)("a-layout-header"),k=(0,l.up)("a-layout");return(0,l.wg)(),(0,l.j4)(k,null,{default:(0,l.w5)((()=>[(0,l.Wm)(_,{class:"header",style:{padding:"0 0"}},{default:(0,l.w5)((()=>[(0,l.Wm)(f,null,{default:(0,l.w5)((()=>[(0,l.Wm)(u,{span:4},{default:(0,l.w5)((()=>[(0,l._)("div",d,[(0,l.Wm)(i,{style:{fontSize:"25px",color:"white"}}),(0,l.Wm)(c,{style:{color:"white","font-size":"25px","margin-left":"10px"}},{default:(0,l.w5)((()=>[(0,l.Uk)("Data Mining")])),_:1})])])),_:1}),(0,l.Wm)(u,{span:20},{default:(0,l.w5)((()=>[(0,l.Wm)(p,{selectedKeys:t.selectedKeys1,"onUpdate:selectedKeys":e[0]||(e[0]=e=>t.selectedKeys1=e),theme:"dark",mode:"horizontal",style:{lineHeight:"64px"}},{default:(0,l.w5)((()=>[(0,l.Wm)(h,{key:"1"},{default:(0,l.w5)((()=>[(0,l.Wm)(g,{to:"/Introduction"}),(0,l.Uk)(" 组件介绍 ")])),_:1}),(0,l.Wm)(h,{key:"2"},{default:(0,l.w5)((()=>[(0,l.Wm)(g,{to:"/homeView"}),(0,l.Uk)(" 数据实验楼 ")])),_:1}),(0,l.Wm)(m,{title:t.showUserName,style:{marginLeft:"auto"}},{icon:(0,l.w5)((()=>[(0,l.Wm)(r)])),default:(0,l.w5)((()=>[(0,l.Wm)(h,{onClick:t.exit},{default:(0,l.w5)((()=>[(0,l.Uk)("退出登录")])),_:1},8,["onClick"])])),_:1},8,["title"])])),_:1},8,["selectedKeys"])])),_:1})])),_:1})])),_:1})])),_:1})}a(57658);var u=a(18896),g=a(35926),h=a(92316),r=a(44870),m=a(22483),p=a(50680),f=a(10252),_=(0,l.aZ)({name:"testNavi",components:{UserOutlined:u.Z,LaptopOutlined:g.Z,NotificationOutlined:h.Z},setup(){let t=(0,m.tv)();return{selectedKeys1:(0,r.iH)(["/Introduction"===t.currentRoute.value.fullPath?"1":"2"]),collapsed:(0,r.iH)(!1)}},computed:{showUserName(){return p.Z.get("username")}},methods:{exit(){f.ZP.success("成功退出",1,(()=>{this.$router.push({path:"/"})}))}}}),k=a(40089);const w=(0,k.Z)(_,[["render",c],["__scopeId","data-v-b943c2b2"]]);var D=w,C=(0,l.aZ)({name:"App",components:{testNavi:D}});const b=(0,k.Z)(C,[["render",i]]);var y=b,W=a(87139);const x=(0,l._)("div",{id:"stencil"},null,-1),N=(0,l._)("div",{id:"container"},null,-1),U=(0,l._)("div",{id:"relation_heatmap",style:{width:"100%",height:"300px","margin-top":"50px"}},null,-1),v=(0,l._)("div",{id:"pie_10",style:{width:"600px",height:"400px",margin:"auto"}},null,-1),j=(0,l._)("div",{id:"histogram_29",style:{width:"600px",height:"400px",margin:"auto"}},null,-1),O=(0,l._)("div",{id:"histogram_30",style:{width:"600px",height:"400px",margin:"auto"}},null,-1),q=(0,l._)("div",{id:"histogram_36",style:{width:"600px",height:"400px",margin:"auto"}},null,-1),T=(0,l._)("div",{id:"histogram_36",style:{width:"600px",height:"400px",margin:"auto"}},null,-1),K={style:{padding:"20px 10px"}},S={style:{display:"flex"}},P={style:{width:"300px"}},I={key:0,style:{width:"650px"}};function z(t,e,a,s,n,i){const d=(0,l.up)("a-col"),c=(0,l.up)("el-table-column"),u=(0,l.up)("el-table"),g=(0,l.up)("el-text"),h=(0,l.up)("el-space"),r=(0,l.up)("el-dialog"),m=(0,l.up)("a-form-item"),p=(0,l.up)("a-input"),f=(0,l.up)("edit-outlined"),_=(0,l.up)("a-table"),k=(0,l.up)("a-modal"),w=(0,l.up)("a-select"),D=(0,l.up)("a-switch"),C=(0,l.up)("a-input-number"),b=(0,l.up)("a-form"),y=(0,l.up)("a-row");return(0,l.wg)(),(0,l.j4)(y,null,{default:(0,l.w5)((()=>[(0,l.Wm)(d,{span:4},{default:(0,l.w5)((()=>[x])),_:1}),(0,l.Wm)(d,{span:15},{default:(0,l.w5)((()=>[N])),_:1}),4!=t.dialogContent.id||10!=t.dialogContent.id||29!=t.dialogContent.id||30!=t.dialogContent.id||36!=t.dialogContent.id?((0,l.wg)(),(0,l.j4)(r,{key:0,modelValue:t.dialogTableVisible,"onUpdate:modelValue":e[0]||(e[0]=e=>t.dialogTableVisible=e),title:t.dialogContent.label},{default:(0,l.w5)((()=>[1==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(u,{key:0,data:t.dialogContent.dataBase.slice(0,20),"max-height":"400px","header-cell-style":{background:"#edf6ff",color:"#606266"}},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(t.dialogContent.dataColumns,((t,e)=>((0,l.wg)(),(0,l.j4)(c,{key:e,property:t,label:t},null,8,["property","label"])))),128))])),_:1},8,["data"])):(0,l.kq)("",!0),5==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(g,{key:1,size:"default",style:{float:"left","margin-bottom":"5px"}},{default:(0,l.w5)((()=>[(0,l.Uk)(" 过滤的缺失值行数："+(0,W.zw)(t.dialogContent.hasLossRows),1)])),_:1})):(0,l.kq)("",!0),6==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(h,{key:2,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(g,null,{default:(0,l.w5)((()=>[(0,l.Uk)("检测到的异常值行数为："+(0,W.zw)(t.dialogContent.queer_data_num),1)])),_:1}),(0,l.Wm)(g,null,{default:(0,l.w5)((()=>[(0,l.Uk)("异常值行预览：")])),_:1})])),_:1})):(0,l.kq)("",!0),6==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(u,{key:3,data:t.dialogContent.result,"max-height":"400px",style:{"margin-bottom":"20px"},"header-cell-style":{background:"#edf6ff",color:"#606266"}},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(t.dialogContent.dataColumns,((t,e)=>((0,l.wg)(),(0,l.j4)(c,{key:e,property:t,label:t},null,8,["property","label"])))),128))])),_:1},8,["data"])):(0,l.kq)("",!0),6==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(g,{key:4,size:"default",style:{float:"left","margin-bottom":"5px"}},{default:(0,l.w5)((()=>[(0,l.Uk)("得到数据输出预览： ")])),_:1})):(0,l.kq)("",!0),6==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(u,{key:5,data:t.dialogContent.output.slice(0,20),"max-height":"400px","header-cell-style":{background:"#edf6ff",color:"#606266"}},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(t.dialogContent.dataColumns1,((t,e)=>((0,l.wg)(),(0,l.j4)(c,{key:e,property:t,label:t},null,8,["property","label"])))),128))])),_:1},8,["data"])):(0,l.kq)("",!0),7==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(h,{key:6,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(g,null,{default:(0,l.w5)((()=>[(0,l.Uk)("检测到的重复值行数为："+(0,W.zw)(t.dialogContent.repeat_data_num),1)])),_:1}),(0,l.Wm)(g,null,{default:(0,l.w5)((()=>[(0,l.Uk)("重复行预览：")])),_:1})])),_:1})):(0,l.kq)("",!0),11==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(u,{key:7,data:t.dialogContent.output.slice(0,20),"max-height":"400px",style:{"margin-bottom":"20px"},"header-cell-style":{background:"#edf6ff",color:"#606266"}},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(t.dialogContent.dataColumns1,((t,e)=>((0,l.wg)(),(0,l.j4)(c,{key:e,property:t,label:t},null,8,["property","label"])))),128))])),_:1},8,["data"])):(0,l.kq)("",!0),20==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(u,{key:8,data:t.dialogContent.output.slice(0,20),"max-height":"400px",style:{"margin-bottom":"20px"},"header-cell-style":{background:"#edf6ff",color:"#606266"}},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(t.dialogContent.dataColumns1,((t,e)=>((0,l.wg)(),(0,l.j4)(c,{key:e,property:t,label:t},null,8,["property","label"])))),128))])),_:1},8,["data"])):(0,l.kq)("",!0),24==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(u,{key:9,data:t.dialogContent.output.slice(0,20),"max-height":"400px",style:{"margin-bottom":"20px"},"header-cell-style":{background:"#edf6ff",color:"#606266"}},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(t.dialogContent.dataColumns1,((t,e)=>((0,l.wg)(),(0,l.j4)(c,{key:e,property:t,label:t},null,8,["property","label"])))),128))])),_:1},8,["data"])):(0,l.kq)("",!0),25==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(u,{key:10,data:t.dialogContent.output.slice(0,20),"max-height":"400px",style:{"margin-bottom":"20px"},"header-cell-style":{background:"#edf6ff",color:"#606266"}},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(t.dialogContent.dataColumns1,((t,e)=>((0,l.wg)(),(0,l.j4)(c,{key:e,property:t,label:t},null,8,["property","label"])))),128))])),_:1},8,["data"])):(0,l.kq)("",!0),26==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(u,{key:11,data:t.dialogContent.output.slice(0,20),"max-height":"400px",style:{"margin-bottom":"20px"},"header-cell-style":{background:"#edf6ff",color:"#606266"}},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(t.dialogContent.dataColumns1,((t,e)=>((0,l.wg)(),(0,l.j4)(c,{key:e,property:t,label:t},null,8,["property","label"])))),128))])),_:1},8,["data"])):(0,l.kq)("",!0),27==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(u,{key:12,data:t.dialogContent.output.slice(0,20),"max-height":"400px",style:{"margin-bottom":"20px"},"header-cell-style":{background:"#edf6ff",color:"#606266"}},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(t.dialogContent.dataColumns1,((t,e)=>((0,l.wg)(),(0,l.j4)(c,{key:e,property:t,label:t},null,8,["property","label"])))),128))])),_:1},8,["data"])):(0,l.kq)("",!0),28==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(u,{key:13,data:t.dialogContent.output.slice(0,20),"max-height":"400px",style:{"margin-bottom":"20px"},"header-cell-style":{background:"#edf6ff",color:"#606266"}},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(t.dialogContent.dataColumns1,((t,e)=>((0,l.wg)(),(0,l.j4)(c,{key:e,property:t,label:t},null,8,["property","label"])))),128))])),_:1},8,["data"])):(0,l.kq)("",!0),30==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(g,{key:14,size:"default",style:{float:"left","margin-bottom":"5px"}},{default:(0,l.w5)((()=>[(0,l.Uk)("降维数据：")])),_:1})):(0,l.kq)("",!0),[31,32,33,34].includes(t.dialogContent.id)?((0,l.wg)(),(0,l.j4)(h,{key:15,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(g,{size:"default"},{default:(0,l.w5)((()=>[(0,l.Uk)("截距：")])),_:1}),(0,l.Wm)(g,{size:"default"},{default:(0,l.w5)((()=>[(0,l.Uk)((0,W.zw)(t.dialogContent.intercept),1)])),_:1}),(0,l.Wm)(g,{size:"default",style:{"margin-top":"20px"}},{default:(0,l.w5)((()=>[(0,l.Uk)("系数：")])),_:1})])),_:1})):(0,l.kq)("",!0),[31,32,33,34].includes(t.dialogContent.id)?((0,l.wg)(),(0,l.j4)(u,{key:16,data:t.dialogContent.result,"max-height":"400px","header-cell-style":{background:"#edf6ff",color:"#606266"}},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(t.dialogContent.dataColumns,((t,e)=>((0,l.wg)(),(0,l.j4)(c,{key:e,property:t,label:t},null,8,["property","label"])))),128))])),_:1},8,["data"])):(0,l.kq)("",!0),[35,37,42].includes(t.dialogContent.id)?((0,l.wg)(),(0,l.j4)(g,{key:17,size:"default",style:{float:"left","margin-bottom":"5px"}},{default:(0,l.w5)((()=>[(0,l.Uk)(" 参数列表： ")])),_:1})):(0,l.kq)("",!0),38==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(g,{key:18,size:"default",style:{float:"left","margin-bottom":"5px"}},{default:(0,l.w5)((()=>[(0,l.Uk)("系数：")])),_:1})):(0,l.kq)("",!0),38==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(u,{key:19,data:t.dialogContent.coef,"max-height":"400px","header-cell-style":{background:"#edf6ff",color:"#606266"}},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(t.dialogContent.coefDataColumns,((t,e)=>((0,l.wg)(),(0,l.j4)(c,{key:e,property:t,label:t},null,8,["property","label"])))),128))])),_:1},8,["data"])):(0,l.kq)("",!0),38==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(g,{key:20,size:"default",style:{float:"left","margin-top":"20px","margin-bottom":"5px"}},{default:(0,l.w5)((()=>[(0,l.Uk)(" 截距： ")])),_:1})):(0,l.kq)("",!0),39==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(g,{key:21,size:"default",style:{float:"left","margin-bottom":"5px"}},{default:(0,l.w5)((()=>[(0,l.Uk)("支持向量个数： ")])),_:1})):(0,l.kq)("",!0),39==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(u,{key:22,data:t.dialogContent.n_support,"max-height":"400px","header-cell-style":{background:"#edf6ff",color:"#606266"}},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(t.dialogContent.n_supportDataColumns,((t,e)=>((0,l.wg)(),(0,l.j4)(c,{key:e,property:t,label:t},null,8,["property","label"])))),128))])),_:1},8,["data"])):(0,l.kq)("",!0),39==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(g,{key:23,size:"default",style:{float:"left","margin-top":"20px","margin-bottom":"5px"}},{default:(0,l.w5)((()=>[(0,l.Uk)(" 截距： ")])),_:1})):(0,l.kq)("",!0),41==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(g,{key:24,size:"default",style:{float:"left","margin-bottom":"5px"}},{default:(0,l.w5)((()=>[(0,l.Uk)("系数：")])),_:1})):(0,l.kq)("",!0),[3,7,9,13,14,15,16,17,18,19,21,22,23].includes(t.dialogContent.id)?((0,l.wg)(),(0,l.j4)(u,{key:25,data:t.dialogContent.result.slice(0,20),"max-height":"400px","header-cell-style":{background:"#edf6ff",color:"#606266"}},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(t.dialogContent.dataColumns,((t,e)=>((0,l.wg)(),(0,l.j4)(c,{key:e,property:t,label:t},null,8,["property","label"])))),128))])),_:1},8,["data"])):(0,l.kq)("",!0),[2,5,8,11,20,24,25,26,27,28,35,37,38,39,41,42].includes(t.dialogContent.id)?((0,l.wg)(),(0,l.j4)(u,{key:26,data:t.dialogContent.result,"max-height":"400px","header-cell-style":{background:"#edf6ff",color:"#606266"}},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(t.dialogContent.dataColumns,((t,e)=>((0,l.wg)(),(0,l.j4)(c,{key:e,property:t,label:t},null,8,["property","label"])))),128))])),_:1},8,["data"])):(0,l.kq)("",!0)])),_:1},8,["modelValue","title"])):(0,l.kq)("",!0),4==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(r,{key:1,modelValue:t.dialogTableVisible,"onUpdate:modelValue":e[1]||(e[1]=e=>t.dialogTableVisible=e),visible:t.dialogTableVisible,title:t.dialogContent.label,onOpened:t.openId4},{default:(0,l.w5)((()=>[(0,l.Wm)(u,{data:t.dialogContent.result,style:{"margin-bottom":"20px"},"max-height":"400px","header-cell-style":{background:"#edf6ff",color:"#606266"}},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(t.dialogContent.dataColumns,((t,e)=>((0,l.wg)(),(0,l.j4)(c,{key:e,property:t,label:t},null,8,["property","label"])))),128))])),_:1},8,["data"]),(0,l.Wm)(g,{size:"default",style:{float:"left","font-weight":"bold"}},{default:(0,l.w5)((()=>[(0,l.Uk)("热力图：")])),_:1}),U])),_:1},8,["modelValue","visible","title","onOpened"])):(0,l.kq)("",!0),10==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(r,{key:2,modelValue:t.dialogTableVisible,"onUpdate:modelValue":e[2]||(e[2]=e=>t.dialogTableVisible=e),visible:t.dialogTableVisible,title:t.dialogContent.label,onOpened:t.openId10},{default:(0,l.w5)((()=>[v])),_:1},8,["modelValue","visible","title","onOpened"])):(0,l.kq)("",!0),29==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(r,{key:3,modelValue:t.dialogTableVisible,"onUpdate:modelValue":e[3]||(e[3]=e=>t.dialogTableVisible=e),visible:t.dialogTableVisible,title:t.dialogContent.label,onOpened:t.openId29},{default:(0,l.w5)((()=>[(0,l.Wm)(g,{size:"default",style:{float:"left","margin-bottom":"5px"}},{default:(0,l.w5)((()=>[(0,l.Uk)("降维数据：")])),_:1}),(0,l.Wm)(u,{data:t.dialogContent.output.slice(0,20),"max-height":"400px",style:{"margin-bottom":"20px"},"header-cell-style":{background:"#edf6ff",color:"#606266"}},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(t.dialogContent.dataColumns1,((t,e)=>((0,l.wg)(),(0,l.j4)(c,{key:e,property:t,label:t},null,8,["property","label"])))),128))])),_:1},8,["data"]),(0,l.Wm)(g,{size:"default",style:{float:"left","margin-bottom":"5px"}},{default:(0,l.w5)((()=>[(0,l.Uk)("PCA主成分：")])),_:1}),(0,l.Wm)(u,{data:t.dialogContent.result,"max-height":"400px","header-cell-style":{background:"#edf6ff",color:"#606266"}},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(t.dialogContent.dataColumns,((t,e)=>((0,l.wg)(),(0,l.j4)(c,{key:e,property:t,label:t},null,8,["property","label"])))),128))])),_:1},8,["data"]),j])),_:1},8,["modelValue","visible","title","onOpened"])):(0,l.kq)("",!0),30==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(r,{key:4,modelValue:t.dialogTableVisible,"onUpdate:modelValue":e[4]||(e[4]=e=>t.dialogTableVisible=e),visible:t.dialogTableVisible,title:t.dialogContent.label,onOpened:t.openId30},{default:(0,l.w5)((()=>[(0,l.Wm)(g,{size:"default",style:{float:"left","margin-bottom":"5px"}},{default:(0,l.w5)((()=>[(0,l.Uk)("降维数据：")])),_:1}),(0,l.Wm)(u,{data:t.dialogContent.result,"max-height":"400px","header-cell-style":{background:"#edf6ff",color:"#606266"}},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(t.dialogContent.dataColumns,((t,e)=>((0,l.wg)(),(0,l.j4)(c,{key:e,property:t,label:t},null,8,["property","label"])))),128))])),_:1},8,["data"]),O])),_:1},8,["modelValue","visible","title","onOpened"])):(0,l.kq)("",!0),36==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(r,{key:5,modelValue:t.dialogTableVisible,"onUpdate:modelValue":e[5]||(e[5]=e=>t.dialogTableVisible=e),visible:t.dialogTableVisible,title:t.dialogContent.label,onOpened:t.openId36},{default:(0,l.w5)((()=>[q])),_:1},8,["modelValue","visible","title","onOpened"])):(0,l.kq)("",!0),40==t.dialogContent.id?((0,l.wg)(),(0,l.j4)(r,{key:6,modelValue:t.dialogTableVisible,"onUpdate:modelValue":e[6]||(e[6]=e=>t.dialogTableVisible=e),visible:t.dialogTableVisible,title:t.dialogContent.label,onOpened:t.openId36},{default:(0,l.w5)((()=>[T])),_:1},8,["modelValue","visible","title","onOpened"])):(0,l.kq)("",!0),(0,l.Wm)(d,{span:5},{default:(0,l.w5)((()=>[(0,l._)("div",K,[(0,l.Wm)(b,{model:t.formData},{default:(0,l.w5)((()=>[(0,l.wy)((0,l.Wm)(m,{label:"组件名称"},{default:(0,l.w5)((()=>[(0,l.Wm)(g,{style:{color:"#000000"}},{default:(0,l.w5)((()=>[(0,l.Uk)((0,W.zw)(t.formData.title),1)])),_:1})])),_:1},512),[[o.F8,null!==t.formData.title]]),(0,l.wy)((0,l.Wm)(m,{label:"节点名称"},{default:(0,l.w5)((()=>[(0,l.Wm)(p,{value:t.formData.name,"onUpdate:value":e[7]||(e[7]=e=>t.formData.name=e),onChange:t.onNameChange,style:(0,W.j5)({width:t.selectWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1},512),[[o.F8,null!==t.formData.name]]),1==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:0,label:"选取数据集"},{default:(0,l.w5)((()=>[(0,l.Wm)(p,{id:"dataInput",style:(0,W.j5)({width:t.selectWidth,float:"right"}),value:t.formData.content.dataSource,"onUpdate:value":e[8]||(e[8]=e=>t.formData.content.dataSource=e),onChange:t.onDataChange},{addonAfter:(0,l.w5)((()=>[(0,l.Wm)(f,{onClick:t.showModal},null,8,["onClick"])])),_:1},8,["style","value","onChange"]),(0,l.Wm)(k,{visible:t.visible,"onUpdate:visible":e[9]||(e[9]=e=>t.visible=e),width:"1000px",title:"选取数据集",onOk:t.handleOk},{default:(0,l.w5)((()=>[(0,l._)("div",S,[(0,l._)("div",P,[(0,l.Wm)(_,{columns:t.columns,dataSource:t.tableData,pagination:!1,"row-selection":{selectedRowKeys:t.selectedRowKeys,onChange:t.onSelectChange,type:"radio"},"show-header":!1},null,8,["columns","dataSource","row-selection"])]),t.showData?((0,l.wg)(),(0,l.iD)("div",I,[(0,l.Wm)(g,{style:{"font-size":"larger","font-weight":"bold","margin-left":"20px"}},{default:(0,l.w5)((()=>[(0,l.Uk)((0,W.zw)(t.selectedRowName),1)])),_:1}),(0,l.Wm)(u,{data:t.data.dataBase.slice(0,10),style:{"margin-left":"20px","margin-top":"30px"},"max-height":"600px","header-cell-style":{background:"#edf6ff",color:"#606266"},"empty-text":"暂无数据"},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(t.data.dataColumns,((t,e)=>((0,l.wg)(),(0,l.j4)(c,{key:e,property:t,label:t},null,8,["property","label"])))),128))])),_:1},8,["data"])])):(0,l.kq)("",!0)])])),_:1},8,["visible","onOk"])])),_:1})):(0,l.kq)("",!0),2==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:1,label:"统计列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[10]||(e[10]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",style:(0,W.j5)({width:t.selectWidth,float:"right"}),placeholder:"Please select",onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),3==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:2,label:"统计列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[11]||(e[11]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),4==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:3,label:"选择列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[12]||(e[12]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),4==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:4,label:"相关性指标"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.indicator,"onUpdate:value":e[13]||(e[13]=e=>t.formData.content.indicator=e),placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),options:t.options_4,onChange:t.onIndicatorChange},null,8,["value","style","options","onChange"])])),_:1})):(0,l.kq)("",!0),5==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:5,label:"过滤缺失值"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked,"onUpdate:checked":e[14]||(e[14]=e=>t.formData.content.checked=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange,style:{"margin-left":"10px",float:"left"}},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),6==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:6,label:"检测列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[15]||(e[15]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),6==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:7,label:"检测策略"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.method,"onUpdate:value":e[16]||(e[16]=e=>t.formData.content.method=e),placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),options:t.options_6,onChange:t.onMethodChange},null,8,["value","style","options","onChange"])])),_:1})):(0,l.kq)("",!0),6==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:8,label:"是否过滤异常值"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked,"onUpdate:checked":e[17]||(e[17]=e=>t.formData.content.checked=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange,style:{"margin-left":"10px",float:"left"}},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),7==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:9,label:"是否过滤重复值"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked,"onUpdate:checked":e[18]||(e[18]=e=>t.formData.content.checked=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange,style:{"margin-left":"10px",float:"left"}},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),8==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:10,label:"计算列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[19]||(e[19]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),8==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:11,label:"相似度"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.similarity,"onUpdate:value":e[20]||(e[20]=e=>t.formData.content.similarity=e),placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),options:t.options_8,onChange:t.onSimilarityChange},null,8,["value","style","options","onChange"])])),_:1})):(0,l.kq)("",!0),9==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:12,label:"删除列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[21]||(e[21]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),10==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:13,label:"标签列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[22]||(e[22]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),10==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:14,label:"测试集大小"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.testSize,"onUpdate:value":e[23]||(e[23]=e=>t.formData.content.testSize=e),min:0,max:1,step:.1,onChange:t.onTestSizeChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","step","onChange","style"])])),_:1})):(0,l.kq)("",!0),10==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:15,label:"采样随机数"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.randomState,"onUpdate:value":e[24]||(e[24]=e=>t.formData.content.randomState=e),min:0,max:100,onChange:t.onRandomStateChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),10==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:16,label:"分层抽样"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked,"onUpdate:checked":e[25]||(e[25]=e=>t.formData.content.checked=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange,style:{"margin-left":"24px",float:"left"}},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),10==t.formData.id&1==t.formData.content.checked?((0,l.wg)(),(0,l.j4)(m,{key:17,label:"分层列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn1,"onUpdate:value":e[26]||(e[26]=e=>t.formData.content.characterColumn1=e),options:t.optionsCharacterColumns1,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange1},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),11==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:18,label:"编码列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[27]||(e[27]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),12==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:19,label:"编码列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[28]||(e[28]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),13==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:20,label:"转换列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[29]||(e[29]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),13==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:21,label:"转换为"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.type,"onUpdate:value":e[30]||(e[30]=e=>t.formData.content.type=e),options:t.options_13,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onTypeChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),14==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:22,label:"选择列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[31]||(e[31]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),14==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:23,label:"重命名为"},{default:(0,l.w5)((()=>[(0,l.Wm)(p,{value:t.formData.content.newName,"onUpdate:value":e[32]||(e[32]=e=>t.formData.content.newName=e),onChange:t.onNewNameChange,style:(0,W.j5)({width:t.selectWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),15==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:24,label:"计算列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[33]||(e[33]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),15==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:25,label:"计算类型"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.computeType,"onUpdate:value":e[34]||(e[34]=e=>t.formData.content.computeType=e),options:t.options_15,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onComputeTypeChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),15==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:26,label:"计算值"},{default:(0,l.w5)((()=>[(0,l.Wm)(p,{value:t.formData.content.computeNum,"onUpdate:value":e[35]||(e[35]=e=>t.formData.content.computeNum=e),onChange:t.onComputeNumChange,style:(0,W.j5)({width:t.selectWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),16==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:27,label:"替换列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[36]||(e[36]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),16==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:28,label:"替换方式"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.substituteMethod,"onUpdate:value":e[37]||(e[37]=e=>t.formData.content.substituteMethod=e),options:t.options_16,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onSubstituteMethodChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),16==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:29,label:"被替换值"},{default:(0,l.w5)((()=>[(0,l.Wm)(p,{value:t.formData.content.bySub,"onUpdate:value":e[38]||(e[38]=e=>t.formData.content.bySub=e),onChange:t.onBySubChange,style:(0,W.j5)({width:t.selectWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),16==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:30,label:"替换值"},{default:(0,l.w5)((()=>[(0,l.Wm)(p,{value:t.formData.content.sub,"onUpdate:value":e[39]||(e[39]=e=>t.formData.content.sub=e),onChange:t.onSubChange,style:(0,W.j5)({width:t.selectWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),17==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:31,label:"填补列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[40]||(e[40]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),17==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:32,label:"填补策略"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.fillMethod,"onUpdate:value":e[41]||(e[41]=e=>t.formData.content.fillMethod=e),options:t.options_17,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onFillMethodChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),17==t.formData.id&"specific"==t.formData.content.fillMethod?((0,l.wg)(),(0,l.j4)(m,{key:33,label:"填补值"},{default:(0,l.w5)((()=>[(0,l.Wm)(p,{value:t.formData.content.specificNum,"onUpdate:value":e[42]||(e[42]=e=>t.formData.content.specificNum=e),onChange:t.onSpecificNumChange,style:(0,W.j5)({width:t.selectWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),18==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:34,label:"排序列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[43]||(e[43]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),18==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:35,label:"降序排列"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked,"onUpdate:checked":e[44]||(e[44]=e=>t.formData.content.checked=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange,style:{"margin-left":"24px",float:"left"}},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),19==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:36,label:"编码列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[45]||(e[45]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),19==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:37,label:"删除首个取值"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked,"onUpdate:checked":e[46]||(e[46]=e=>t.formData.content.checked=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange,style:{"margin-left":"24px",float:"left"}},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),20==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:38,label:"处理列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[47]||(e[47]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",style:(0,W.j5)({width:t.selectWidth,float:"right"}),placeholder:"Please select",onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),21==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:39,label:"处理列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[48]||(e[48]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),21==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:40,label:"最小值"},{default:(0,l.w5)((()=>[(0,l.Wm)(p,{value:t.formData.content.minNum,"onUpdate:value":e[49]||(e[49]=e=>t.formData.content.minNum=e),onChange:t.onMinNumChange,style:(0,W.j5)({width:t.selectWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),21==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:41,label:"最大值"},{default:(0,l.w5)((()=>[(0,l.Wm)(p,{value:t.formData.content.maxNum,"onUpdate:value":e[50]||(e[50]=e=>t.formData.content.maxNum=e),onChange:t.onMaxNumChange,style:(0,W.j5)({width:t.selectWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),22==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:42,label:"处理列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[51]||(e[51]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),23==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:43,label:"处理列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[52]||(e[52]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),24==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:44,label:"处理列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[53]||(e[53]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),24==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:45,label:"分段数"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.numOfDuan,"onUpdate:value":e[54]||(e[54]=e=>t.formData.content.numOfDuan=e),min:1,max:100,onChange:t.onNumOfDuanChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),25==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:46,label:"处理列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[55]||(e[55]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),25==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:47,label:"分段数"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.numOfDuan,"onUpdate:value":e[56]||(e[56]=e=>t.formData.content.numOfDuan=e),min:1,max:100,onChange:t.onNumOfDuanChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),26==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:48,label:"处理列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[57]||(e[57]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),26==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:49,label:"分段数"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.numOfDuan,"onUpdate:value":e[58]||(e[58]=e=>t.formData.content.numOfDuan=e),min:1,max:100,onChange:t.onNumOfDuanChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),27==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:50,label:"处理列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[59]||(e[59]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),27==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:51,label:"标签列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn1,"onUpdate:value":e[60]||(e[60]=e=>t.formData.content.characterColumn1=e),options:t.optionsCharacterColumns1,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange1},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),27==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:52,label:"最大分箱数"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.numOfBox,"onUpdate:value":e[61]||(e[61]=e=>t.formData.content.numOfBox=e),min:1,max:100,onChange:t.onNumOfBoxChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),28==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:53,label:"处理列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[62]||(e[62]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),28==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:54,label:"标签列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn1,"onUpdate:value":e[63]||(e[63]=e=>t.formData.content.characterColumn1=e),options:t.optionsCharacterColumns1,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange1},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),28==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:55,label:"模型类型"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.modelType,"onUpdate:value":e[64]||(e[64]=e=>t.formData.content.modelType=e),options:t.options_28,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onModelTypeChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),28==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:56,label:"最大分箱数"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.numOfBox,"onUpdate:value":e[65]||(e[65]=e=>t.formData.content.numOfBox=e),min:1,max:100,onChange:t.onNumOfBoxChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),29==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:57,label:"特征列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[66]||(e[66]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),29==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:58,label:"维数"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.numOfDim,"onUpdate:value":e[67]||(e[67]=e=>t.formData.content.numOfDim=e),min:1,max:100,onChange:t.onNumOfDimChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),30==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:59,label:"处理列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[68]||(e[68]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),30==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:60,label:"标签列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn1,"onUpdate:value":e[69]||(e[69]=e=>t.formData.content.characterColumn1=e),options:t.optionsCharacterColumns1,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange1},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),30==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:61,label:"维数"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.numOfDim,"onUpdate:value":e[70]||(e[70]=e=>t.formData.content.numOfDim=e),min:1,max:100,onChange:t.onNumOfDimChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),31==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:62,label:"特征列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[71]||(e[71]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),31==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:63,label:"标签列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn1,"onUpdate:value":e[72]||(e[72]=e=>t.formData.content.characterColumn1=e),options:t.optionsCharacterColumns1,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange1},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),31==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:64,label:"训练截距项"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked,"onUpdate:checked":e[73]||(e[73]=e=>t.formData.content.checked=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange,style:{"margin-left":"10px",float:"left"}},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),31==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:65,label:"数据归一化"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked1,"onUpdate:checked":e[74]||(e[74]=e=>t.formData.content.checked1=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange1,style:{"margin-left":"10px",float:"left"}},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),32==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:66,label:"特征列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[75]||(e[75]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),32==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:67,label:"标签列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn1,"onUpdate:value":e[76]||(e[76]=e=>t.formData.content.characterColumn1=e),options:t.optionsCharacterColumns1,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange1},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),32==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:68,label:"正则系数"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.normalNum,"onUpdate:value":e[77]||(e[77]=e=>t.formData.content.normalNum=e),min:1,max:100,onChange:t.onNormalNumChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),32==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:69,label:"训练截距项"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked,"onUpdate:checked":e[78]||(e[78]=e=>t.formData.content.checked=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange,style:{"margin-left":"10px",float:"left"}},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),32==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:70,label:"数据归一化"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked1,"onUpdate:checked":e[79]||(e[79]=e=>t.formData.content.checked1=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange1,style:{"margin-left":"10px",float:"left"}},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),33==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:71,label:"特征列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[80]||(e[80]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),33==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:72,label:"标签列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn1,"onUpdate:value":e[81]||(e[81]=e=>t.formData.content.characterColumn1=e),options:t.optionsCharacterColumns1,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange1},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),33==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:73,label:"正则系数"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.normalNum,"onUpdate:value":e[82]||(e[82]=e=>t.formData.content.normalNum=e),min:1,max:100,onChange:t.onNormalNumChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),33==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:74,label:"训练截距项"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked,"onUpdate:checked":e[83]||(e[83]=e=>t.formData.content.checked=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange,style:{"margin-left":"10px",float:"left"}},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),33==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:75,label:"数据归一化"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked1,"onUpdate:checked":e[84]||(e[84]=e=>t.formData.content.checked1=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange1,style:{"margin-left":"10px",float:"left"}},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),34==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:76,label:"特征列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[85]||(e[85]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),34==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:77,label:"标签列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn1,"onUpdate:value":e[86]||(e[86]=e=>t.formData.content.characterColumn1=e),options:t.optionsCharacterColumns1,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange1},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),34==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:78,label:"阿尔法值"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.normalNum,"onUpdate:value":e[87]||(e[87]=e=>t.formData.content.normalNum=e),min:0,max:100,step:.1,onChange:t.onNormalNumChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","step","onChange","style"])])),_:1})):(0,l.kq)("",!0),34==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:79,label:"贝塔值"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.normalNum1,"onUpdate:value":e[88]||(e[88]=e=>t.formData.content.normalNum1=e),min:0,max:100,step:.1,onChange:t.onNormalNumChange1,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","step","onChange","style"])])),_:1})):(0,l.kq)("",!0),34==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:80,label:"训练截距项"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked,"onUpdate:checked":e[89]||(e[89]=e=>t.formData.content.checked=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange,style:{"margin-left":"10px",float:"left"}},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),34==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:81,label:"数据归一化"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked1,"onUpdate:checked":e[90]||(e[90]=e=>t.formData.content.checked1=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange1,style:{"margin-left":"10px",float:"left"}},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),35==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:82,label:"特征列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[91]||(e[91]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),35==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:83,label:"标签列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn1,"onUpdate:value":e[92]||(e[92]=e=>t.formData.content.characterColumn1=e),options:t.optionsCharacterColumns1,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange1},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),35==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:84,label:"邻居个数"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.numberOfNeighbor,"onUpdate:value":e[93]||(e[93]=e=>t.formData.content.numberOfNeighbor=e),min:1,max:100,onChange:t.onNumberOfNeighborChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),35==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:85,label:"权重计算方式"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.weightType,"onUpdate:value":e[94]||(e[94]=e=>t.formData.content.weightType=e),options:t.options_35_1,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.numberWidth,float:"right"}),onChange:t.onWeightTypeChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),35==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:86,label:"距离计算方式"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.distanceType,"onUpdate:value":e[95]||(e[95]=e=>t.formData.content.distanceType=e),options:t.options_35_2,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.numberWidth,float:"right"}),onChange:t.onDistanceTypeChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),36==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:87,label:"特征列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[96]||(e[96]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),36==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:88,label:"标签列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn1,"onUpdate:value":e[97]||(e[97]=e=>t.formData.content.characterColumn1=e),options:t.optionsCharacterColumns1,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange1},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),36==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:89,label:"最大树深度"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.maxDepth,"onUpdate:value":e[98]||(e[98]=e=>t.formData.content.maxDepth=e),min:1,max:100,onChange:t.onMaxDepthChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),36==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:90,label:"分裂最少样本"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.minSplit,"onUpdate:value":e[99]||(e[99]=e=>t.formData.content.minSplit=e),min:1,max:100,onChange:t.onMinSplitChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),36==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:91,label:"叶节点最少样本"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.minLeaf,"onUpdate:value":e[100]||(e[100]=e=>t.formData.content.minLeaf=e),min:1,max:100,onChange:t.onMinLeafChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),37==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:92,label:"特征列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[101]||(e[101]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),37==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:93,label:"标签列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn1,"onUpdate:value":e[102]||(e[102]=e=>t.formData.content.characterColumn1=e),options:t.optionsCharacterColumns1,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange1},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),37==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:94,label:"贝叶斯分类器"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.bayesType,"onUpdate:value":e[103]||(e[103]=e=>t.formData.content.bayesType=e),options:t.options_37,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.numberWidth,float:"right"}),onChange:t.onBayesTypeChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),37==t.formData.id&"GaussianNB"!=t.formData.content.bayesType?((0,l.wg)(),(0,l.j4)(m,{key:95,label:"平滑系数"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.smooth,"onUpdate:value":e[104]||(e[104]=e=>t.formData.content.smooth=e),min:0,max:100,step:.1,onChange:t.onSmoothChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","step","onChange","style"])])),_:1})):(0,l.kq)("",!0),37==t.formData.id&"GaussianNB"!=t.formData.content.bayesType?((0,l.wg)(),(0,l.j4)(m,{key:96,label:"学习先验概率"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked,"onUpdate:checked":e[105]||(e[105]=e=>t.formData.content.checked=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange,style:{"margin-left":"24px",float:"left"}},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),37==t.formData.id&"BernoulliNB"==t.formData.content.bayesType?((0,l.wg)(),(0,l.j4)(m,{key:97,label:"二值化阈值"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.binarization,"onUpdate:value":e[106]||(e[106]=e=>t.formData.content.binarization=e),min:0,max:100,step:.1,onChange:t.onBinarizationChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","step","onChange","style"])])),_:1})):(0,l.kq)("",!0),38==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:98,label:"特征列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[107]||(e[107]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),38==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:99,label:"标签列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn1,"onUpdate:value":e[108]||(e[108]=e=>t.formData.content.characterColumn1=e),options:t.optionsCharacterColumns1,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange1},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),38==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:100,label:"正则化系数"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.normalNum,"onUpdate:value":e[109]||(e[109]=e=>t.formData.content.normalNum=e),min:0,max:100,step:1,onChange:t.onNormalNumChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),38==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:101,label:"最小收敛数"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.minConverge,"onUpdate:value":e[110]||(e[110]=e=>t.formData.content.minConverge=e),min:0,max:100,step:1,onChange:t.onMinConvergeChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),38==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:102,label:"最大迭代数"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.maxIter,"onUpdate:value":e[111]||(e[111]=e=>t.formData.content.maxIter=e),min:0,max:1e4,step:1,onChange:t.onMaxIterChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),38==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:103,label:"训练截距项"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked,"onUpdate:checked":e[112]||(e[112]=e=>t.formData.content.checked=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange,style:{"margin-left":"10px",float:"left"}},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),39==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:104,label:"特征列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[113]||(e[113]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),39==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:105,label:"标签列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn1,"onUpdate:value":e[114]||(e[114]=e=>t.formData.content.characterColumn1=e),options:t.optionsCharacterColumns1,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange1},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),39==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:106,label:"训练错误率上限"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.trainMaxError,"onUpdate:value":e[115]||(e[115]=e=>t.formData.content.trainMaxError=e),min:0,max:1,step:.01,onChange:t.onTrainMaxErrorChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","step","onChange","style"])])),_:1})):(0,l.kq)("",!0),39==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:107,label:"核函数"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.coreFunction,"onUpdate:value":e[116]||(e[116]=e=>t.formData.content.coreFunction=e),options:t.options_39_1,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCoreFunctionChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),39==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:108,label:"gamma"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.gamma,"onUpdate:value":e[117]||(e[117]=e=>t.formData.content.gamma=e),options:t.options_39_2,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onGammaChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),39==t.formData.id&"rbf"!=t.formData.content.coreFunction?((0,l.wg)(),(0,l.j4)(m,{key:109,label:"coef0"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.coef0,"onUpdate:value":e[118]||(e[118]=e=>t.formData.content.coef0=e),min:0,max:1,step:.01,onChange:t.onCoef0Change,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","step","onChange","style"])])),_:1})):(0,l.kq)("",!0),39==t.formData.id&"poly"==t.formData.content.coreFunction?((0,l.wg)(),(0,l.j4)(m,{key:110,label:"degree"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.degree,"onUpdate:value":e[119]||(e[119]=e=>t.formData.content.degree=e),min:0,max:100,onChange:t.onDegreeChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),39==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:111,label:"类别权重"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.classWeight,"onUpdate:value":e[120]||(e[120]=e=>t.formData.content.classWeight=e),options:t.options_39_3,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onClassWeightChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),40==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:112,label:"特征列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[121]||(e[121]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),40==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:113,label:"标签列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn1,"onUpdate:value":e[122]||(e[122]=e=>t.formData.content.characterColumn1=e),options:t.optionsCharacterColumns1,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange1},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),40==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:114,label:"最大树深度"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.maxDepth,"onUpdate:value":e[123]||(e[123]=e=>t.formData.content.maxDepth=e),min:1,max:100,onChange:t.onMaxDepthChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),40==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:115,label:"分裂最少样本"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.minSplit,"onUpdate:value":e[124]||(e[124]=e=>t.formData.content.minSplit=e),min:1,max:100,onChange:t.onMinSplitChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),40==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:116,label:"叶节点最少样本"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.minLeaf,"onUpdate:value":e[125]||(e[125]=e=>t.formData.content.minLeaf=e),min:1,max:100,onChange:t.onMinLeafChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),41==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:117,label:"特征列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[126]||(e[126]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),41==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:118,label:"标签列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn1,"onUpdate:value":e[127]||(e[127]=e=>t.formData.content.characterColumn1=e),options:t.optionsCharacterColumns1,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange1},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),41==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:119,label:"正则化项"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.normalItem,"onUpdate:value":e[128]||(e[128]=e=>t.formData.content.normalItem=e),options:t.options_41,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onNormalItemChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),41==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:120,label:"正则化系数"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.normalNum,"onUpdate:value":e[129]||(e[129]=e=>t.formData.content.normalNum=e),min:0,max:100,step:1,onChange:t.onNormalNumChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),41==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:121,label:"收敛系数"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.minConverge,"onUpdate:value":e[130]||(e[130]=e=>t.formData.content.minConverge=e),min:0,max:100,step:1,onChange:t.onMinConvergeChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),41==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:122,label:"随机种子"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.randomState,"onUpdate:value":e[131]||(e[131]=e=>t.formData.content.randomState=e),min:0,max:100,onChange:t.onRandomStateChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),41==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:123,label:"类别权重"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.classWeight,"onUpdate:value":e[132]||(e[132]=e=>t.formData.content.classWeight=e),options:t.options_39_3,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onClassWeightChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),42==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:124,label:"特征列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[133]||(e[133]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),42==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:125,label:"标签列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn1,"onUpdate:value":e[134]||(e[134]=e=>t.formData.content.characterColumn1=e),options:t.optionsCharacterColumns1,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange1},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),42==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:126,label:"邻居个数"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.numberOfNeighbor,"onUpdate:value":e[135]||(e[135]=e=>t.formData.content.numberOfNeighbor=e),min:1,max:100,onChange:t.onNumberOfNeighborChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),42==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:127,label:"权重计算方式"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.weightType,"onUpdate:value":e[136]||(e[136]=e=>t.formData.content.weightType=e),options:t.options_35_1,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.numberWidth,float:"right"}),onChange:t.onWeightTypeChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),42==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:128,label:"距离计算方式"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.distanceType,"onUpdate:value":e[137]||(e[137]=e=>t.formData.content.distanceType=e),options:t.options_35_2,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.numberWidth,float:"right"}),onChange:t.onDistanceTypeChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),43==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:129,label:"特征列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn,"onUpdate:value":e[138]||(e[138]=e=>t.formData.content.characterColumn=e),options:t.optionsCharacterColumns,mode:"multiple",size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCharacterChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),43==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:130,label:"聚类数"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.numOfCluster,"onUpdate:value":e[139]||(e[139]=e=>t.formData.content.numOfCluster=e),min:0,max:100,onChange:t.onNumOfClusterChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),43==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:131,label:"质心初始化"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.centerInitial,"onUpdate:value":e[140]||(e[140]=e=>t.formData.content.centerInitial=e),options:t.options_43,size:"middle",placeholder:"Please select",style:(0,W.j5)({width:t.selectWidth,float:"right"}),onChange:t.onCenterInitialChange},null,8,["value","options","style","onChange"])])),_:1})):(0,l.kq)("",!0),43==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:132,label:"初始化次数"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.initialTimes,"onUpdate:value":e[141]||(e[141]=e=>t.formData.content.initialTimes=e),min:0,max:100,onChange:t.onInitialTimesChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),43==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:133,label:"最大迭代数"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.maxIter,"onUpdate:value":e[142]||(e[142]=e=>t.formData.content.maxIter=e),min:0,max:1e3,onChange:t.onMaxIterChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),43==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:134,label:"最小收敛值"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.minConverge,"onUpdate:value":e[143]||(e[143]=e=>t.formData.content.minConverge=e),min:0,max:100,onChange:t.onMinConvergeChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),43==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:135,label:"随机种子"},{default:(0,l.w5)((()=>[(0,l.Wm)(C,{value:t.formData.content.randomState,"onUpdate:value":e[144]||(e[144]=e=>t.formData.content.randomState=e),min:0,max:100,onChange:t.onRandomStateChange,style:(0,W.j5)({width:t.numberWidth,float:"right"})},null,8,["value","onChange","style"])])),_:1})):(0,l.kq)("",!0),49==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:136,label:"标签列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn1,"onUpdate:value":e[145]||(e[145]=e=>t.formData.content.characterColumn1=e),options:t.optionsCharacterColumns1,size:"middle",placeholder:"Please select",onChange:t.onCharacterChange1},null,8,["value","options","onChange"])])),_:1})):(0,l.kq)("",!0),49==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:137,label:"均方误差(MSE)"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked,"onUpdate:checked":e[146]||(e[146]=e=>t.formData.content.checked=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),49==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:138,label:"平均绝对误差(MAE)"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked1,"onUpdate:checked":e[147]||(e[147]=e=>t.formData.content.checked1=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),49==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:139,label:"决定系数(R2)"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked2,"onUpdate:checked":e[148]||(e[148]=e=>t.formData.content.checked2=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),49==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:140,label:"中位绝对误差"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked3,"onUpdate:checked":e[149]||(e[149]=e=>t.formData.content.checked3=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),49==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:141,label:"解释方差"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked4,"onUpdate:checked":e[150]||(e[150]=e=>t.formData.content.checked4=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),49==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:142,label:"最大误差"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked5,"onUpdate:checked":e[151]||(e[151]=e=>t.formData.content.checked5=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),49==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:143,label:"平均泊松偏差"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked6,"onUpdate:checked":e[152]||(e[152]=e=>t.formData.content.checked6=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),49==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:144,label:"平均伽马偏差"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked7,"onUpdate:checked":e[153]||(e[153]=e=>t.formData.content.checked7=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),49==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:145,label:"平均Tweedie偏差"},{default:(0,l.w5)((()=>[(0,l.Wm)(D,{checked:t.formData.content.checked8,"onUpdate:checked":e[154]||(e[154]=e=>t.formData.content.checked8=e),"checked-children":"yes","un-checked-children":"no",onChange:t.onCheckedChange},null,8,["checked","onChange"])])),_:1})):(0,l.kq)("",!0),50==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:146,label:"标签列"},{default:(0,l.w5)((()=>[(0,l.Wm)(w,{value:t.formData.content.characterColumn1,"onUpdate:value":e[155]||(e[155]=e=>t.formData.content.characterColumn1=e),options:t.optionsCharacterColumns1,size:"middle",placeholder:"Please select",onChange:t.onCharacterChange1},null,8,["value","options","onChange"])])),_:1})):(0,l.kq)("",!0),50==t.formData.id?((0,l.wg)(),(0,l.j4)(m,{key:147,label:"正类标签"},{default:(0,l.w5)((()=>[(0,l.Wm)(p,{value:t.formData.content.positiveTag,"onUpdate:value":e[156]||(e[156]=e=>t.formData.content.positiveTag=e),onChange:t.onPositiveTagChange},null,8,["value","onChange"])])),_:1})):(0,l.kq)("",!0)])),_:1},8,["model"])])])),_:1})])),_:1})}var Z=a(41827),A=a(73397),M=a(69928),L=a(2298);const H=["src"],B={class:"label"},V={key:0,class:"status"},E=["src"],R={key:1,class:"status"},Y=["src"],F=["src"],$={class:"label"},Q={key:0,class:"status"},G=["src"];function J(t,e,a,s,n,i){return["success","failed"].includes(n.status)?((0,l.wg)(),(0,l.iD)("div",{key:0,class:(0,W.C_)(["node",n.status]),onClick:e[0]||(e[0]=(0,o.iM)((()=>{}),["stop"])),onContextmenu:e[1]||(e[1]=(...t)=>i.rightClickFinish&&i.rightClickFinish(...t))},[(0,l._)("img",{src:n.image.logo},null,8,H),(0,l._)("span",B,(0,W.zw)(n.label),1),"success"===n.status?((0,l.wg)(),(0,l.iD)("span",V,[(0,l._)("img",{src:n.image.success},null,8,E)])):"failed"===n.status?((0,l.wg)(),(0,l.iD)("span",R,[(0,l._)("img",{src:n.image.failed},null,8,Y)])):(0,l.kq)("",!0)],34)):["running","default"].includes(n.status)?((0,l.wg)(),(0,l.iD)("div",{key:1,class:(0,W.C_)(["node",n.status]),onClick:e[2]||(e[2]=(0,o.iM)((()=>{}),["stop"])),onContextmenu:e[3]||(e[3]=(...t)=>i.rightClick&&i.rightClick(...t))},[(0,l._)("img",{src:n.image.logo},null,8,F),(0,l._)("span",$,(0,W.zw)(n.label),1),"running"===n.status?((0,l.wg)(),(0,l.iD)("span",Q,[(0,l._)("img",{src:n.image.running},null,8,G)])):(0,l.kq)("",!0)],34)):(0,l.kq)("",!0)}var X=a(5325),tt=a(44161);let et=(0,r.iH)([]),at=(0,r.iH)([]);var ot={name:"basicNode",inject:["getNode"],props:{graph:Z.kJ},data(){return{status:"default",label:"基础节点",image:{logo:"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*evDjT5vjkX0AAAAAAAAAAAAAARQnAQ",success:"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*6l60T6h8TTQAAAAAAAAAAAAAARQnAQ",failed:"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*SEISQ6My-HoAAAAAAAAAAAAAARQnAQ",running:"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*t8fURKfgSOgAAAAAAAAAAAAAARQnAQ"},menus:[{label:"运行",click:()=>{if(1==this.getNode().getData().id){this.getNode().setData({...this.getNode().getData(),status:"running"}),console.log("正在请求数据库");let t={"鸢尾花数据集":"show_yuanweihua","大学毕业生收入数据集":"show_graduateIncome"};tt.Z.get("http://127.0.0.1:8000/api/"+t[this.getNode().getData().dataSource]).then((t=>{if(console.log(t),"OK"===t.statusText){const e=t.data.list;let a=[];Object.keys(e[0]).forEach((t=>{a.push({value:t,label:t})})),et.value=a,this.$emit("columns",et.value),at.value=a,this.$emit("columns1",at.value),this.getNode().setData({...this.getNode().getData(),status:"success",dataBase:e,dataId:t.data.dataId,dataColumns:Object.keys(e[0])},{overwrite:!0})}})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)}))}else this.getNode().setData({...this.getNode().getData(),status:"running"}),console.log("正在请求后端服务"),2==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/summary",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0])}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):3==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/unique_amount",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0])}),console.log(this.getNode().getData().result))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):4==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/relation",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0])}),console.log(this.getNode().getData().result))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):5==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/filter_loss",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output,hasLossRows:t.data.has_loss_rows}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):6==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/filter_queer",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",queer_data_num:t.data.queer_data_num,result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output,dataColumns1:Object.keys(t.data.output[0])}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):7==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/filter_repeat",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",repeat_data_num:t.data.repeat_data_num,result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):8==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/sample_similarity",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0])}),console.log(this.getNode().getData().result))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):9==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/delete_columns",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData().result))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):10==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/preprocess_train_test_split",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,train_df:t.data.train_table,test_df:t.data.test_table}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):11==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/digital_coding",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output,dataColumns1:Object.keys(t.data.output[0])}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):13==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/type_change",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):14==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/name_change",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):15==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/compute_column",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):16==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/preprocess_replace_value",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):17==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/preprocess_fillna",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):18==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/preprocess_sort_by_value",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):19==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/onehot",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData().result))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):20==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/z_score_regulation",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output,dataColumns1:Object.keys(t.data.output[0])}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):21==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/min_max_regulation",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):22==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/logistic_regulation",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):23==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/max_abs_regulation",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):24==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/isometric_dispersion",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output,dataColumns1:Object.keys(t.data.output[0])}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):25==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/equal_freq_discretization",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output,dataColumns1:Object.keys(t.data.output[0])}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):26==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/kmeans_discretization",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output,dataColumns1:Object.keys(t.data.output[0])}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):27==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/kafang_discretization",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output,dataColumns1:Object.keys(t.data.output[0])}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):28==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/decision_tree_discretization",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output,dataColumns1:Object.keys(t.data.output[0])}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):29==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/PCA_reduce_dim",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output,dataColumns1:Object.keys(t.data.output[0]),ratios:t.data.ratios}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):30==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/linear_reduce_dim",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output,dataColumns1:Object.keys(t.data.output[0]),ratios:t.data.ratios}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):31==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/linear_regression",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),intercept:t.data.intercept,model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):32==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/lasso_regression",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),intercept:t.data.intercept,model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):33==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/ridge_regression",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),intercept:t.data.intercept,model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):34==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/elastic_net",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),intercept:t.data.intercept,model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):35==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/knn_regression",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):36==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/decision_tree_regression",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),tree:t.data.tree,model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):37==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/naive_bayes",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):38==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/linear_SVC",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",coef:t.data.coef,coefDataColumns:Object.keys(t.data.coef[0]),result:t.data.result,dataColumns:Object.keys(t.data.result[0]),model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):39==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/SVM_classification",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",n_support:t.data.n_support,n_supportDataColumns:Object.keys(t.data.n_support[0]),result:t.data.result,dataColumns:Object.keys(t.data.result[0]),model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):40==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/decision_tree_classification",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),tree:t.data.tree,model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):41==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/logistic_regression",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):42==this.getNode().getData().id&&tt.Z.post("http://127.0.0.1:8000/api/knn_classification",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)}))}},{label:"删除",click:()=>{this.getNode().remove()}}],menus_finish:[{label:"运行",click:()=>{if(1==this.getNode().getData().id){this.getNode().setData({...this.getNode().getData(),status:"running"}),console.log("正在请求数据库");let t={"鸢尾花数据集":"show_yuanweihua","大学毕业生收入数据集":"show_graduateIncome"};tt.Z.get("http://127.0.0.1:8000/api/"+t[this.getNode().getData().dataSource]).then((t=>{if(console.log(t),"OK"===t.statusText){const e=t.data.list;let a=[];Object.keys(e[0]).forEach((t=>{a.push({value:t,label:t})})),et.value=a,this.$emit("columns",et.value),at.value=a,this.$emit("columns1",at.value),this.getNode().setData({...this.getNode().getData(),status:"success",dataBase:e,dataId:t.data.dataId,dataColumns:Object.keys(e[0])},{overwrite:!0})}})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)}))}else this.getNode().setData({...this.getNode().getData(),status:"running"}),console.log("正在请求后端服务"),2==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/summary",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0])}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):3==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/unique_amount",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0])}),console.log(this.getNode().getData().result))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):4==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/relation",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0])}),console.log(this.getNode().getData().result))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):5==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/filter_loss",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output,hasLossRows:t.data.has_loss_rows}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):6==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/filter_queer",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",queer_data_num:t.data.queer_data_num,result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output,dataColumns1:Object.keys(t.data.output[0])}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):7==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/filter_repeat",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",repeat_data_num:t.data.repeat_data_num,result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):8==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/sample_similarity",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0])}),console.log(this.getNode().getData().result))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):9==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/delete_columns",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData().result))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):10==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/preprocess_train_test_split",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,train_df:t.data.train_table,test_df:t.data.test_table}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):11==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/digital_coding",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output,dataColumns1:Object.keys(t.data.output[0])}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):13==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/type_change",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):14==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/name_change",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):15==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/compute_column",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):16==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/preprocess_replace_value",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):17==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/preprocess_fillna",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):18==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/preprocess_sort_by_value",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):19==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/onehot",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData().result))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):20==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/z_score_regulation",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output,dataColumns1:Object.keys(t.data.output[0])}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):21==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/min_max_regulation",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):22==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/logistic_regulation",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):23==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/max_abs_regulation",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):24==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/isometric_dispersion",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output,dataColumns1:Object.keys(t.data.output[0])}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):25==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/equal_freq_discretization",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output,dataColumns1:Object.keys(t.data.output[0])}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):26==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/kmeans_discretization",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output,dataColumns1:Object.keys(t.data.output[0])}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):27==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/kafang_discretization",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output,dataColumns1:Object.keys(t.data.output[0])}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):28==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/decision_tree_discretization",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output,dataColumns1:Object.keys(t.data.output[0])}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):29==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/PCA_reduce_dim",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output,dataColumns1:Object.keys(t.data.output[0]),ratios:t.data.ratios}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):30==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/linear_reduce_dim",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),output:t.data.output,dataColumns1:Object.keys(t.data.output[0]),ratios:t.data.ratios}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):31==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/linear_regression",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),intercept:t.data.intercept,model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):32==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/lasso_regression",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),intercept:t.data.intercept,model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):33==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/ridge_regression",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),intercept:t.data.intercept,model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):34==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/elastic_net",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),intercept:t.data.intercept,model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):35==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/knn_regression",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):36==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/decision_tree_regression",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),tree:t.data.tree,model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):37==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/naive_bayes",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):38==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/linear_SVC",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",coef:t.data.coef,coefDataColumns:Object.keys(t.data.coef[0]),result:t.data.result,dataColumns:Object.keys(t.data.result[0]),model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):39==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/SVM_classification",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",n_support:t.data.n_support,n_supportDataColumns:Object.keys(t.data.n_support[0]),result:t.data.result,dataColumns:Object.keys(t.data.result[0]),model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):40==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/decision_tree_classification",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),tree:t.data.tree,model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):41==this.getNode().getData().id?tt.Z.post("http://127.0.0.1:8000/api/logistic_regression",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)})):42==this.getNode().getData().id&&tt.Z.post("http://127.0.0.1:8000/api/knn_classification",this.getNode().getData()).then((t=>{console.log(t),"OK"===t.statusText&&(this.getNode().setData({...this.getNode().getData(),status:"success",result:t.data.result,dataColumns:Object.keys(t.data.result[0]),model:t.data.model}),console.log(this.getNode().getData()))})).catch((t=>{this.getNode().setData({...this.getNode().getData(),status:"failed"}),console.log(this.getNode()),console.log(t)}))}},{label:"查看运行结果",click:()=>{this.$emit("showInfo",{showBasicInfo:!0,info:this.getNode().getData()})}},{label:"删除",click:()=>{this.getNode().remove()}}]}},mounted(){const t=this.getNode(),e=t?.getData(),{label:a,status:o="default"}=e;this.label=a,this.status=o,t.on("change:data",(({current:t})=>{this.label=t.label,this.status=t.status}))},methods:{rightClick(t){(0,X.Ii)(t,this.menus),t.preventDefault()},rightClickFinish(t){(0,X.Ii)(t,this.menus_finish),t.preventDefault()}}};const lt=(0,k.Z)(ot,[["render",J],["__scopeId","data-v-ca0c00f4"]]);var st=lt,nt=a(90696),it=JSON.parse('[{"shape":"dagNode","data":{"id":1,"label":"读数据表","name":"读数据表","status":"default"},"ports":[{"id":"1-1","group":"bottom"}]},{"shape":"dagNode","data":{"id":2,"label":"字段基本信息统计","name":"字段基本信息统计","status":"default"},"ports":[{"id":"2-1","group":"top"},{"id":"2-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":3,"label":"查看唯一值及数量","name":"查看唯一值及数量","status":"default"},"ports":[{"id":"3-1","group":"top"},{"id":"3-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":4,"label":"数据相关性","name":"数据相关性","status":"default"},"ports":[{"id":"4-1","group":"top"},{"id":"4-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":5,"label":"缺失值检测","name":"缺失值检测","status":"default"},"ports":[{"id":"5-1","group":"top"},{"id":"5-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":6,"label":"单变量异常值检测","name":"单变量异常值检测","status":"default"},"ports":[{"id":"6-1","group":"top"},{"id":"6-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":7,"label":"重复值检测","name":"重复值检测","status":"default"},"ports":[{"id":"7-1","group":"top"},{"id":"7-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":8,"label":"样本相似度计算","name":"样本相似度计算","status":"default"},"ports":[{"id":"8-1","group":"top"},{"id":"8-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":9,"label":"列删除","name":"列删除","status":"default"},"ports":[{"id":"9-1","group":"top"},{"id":"9-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":10,"label":"训练/测试集划分","name":"训练/测试集划分","status":"default"},"ports":[{"id":"10-1","group":"top"},{"id":"10-2","group":"bottom"},{"id":"10-3","group":"bottom"}]},{"shape":"dagNode","data":{"id":11,"label":"数字编码","name":"数字编码","status":"default"},"ports":[{"id":"11-1","group":"top"},{"id":"11-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":12,"label":"人工数字编码","name":"人工数字编码","status":"default"},"ports":[{"id":"12-1","group":"top"},{"id":"12-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":13,"label":"类型转换","name":"类型转换","status":"default"},"ports":[{"id":"13-1","group":"top"},{"id":"13-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":14,"label":"列重命名","name":"列重命名","status":"default"},"ports":[{"id":"14-1","group":"top"},{"id":"14-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":15,"label":"数据列计算","name":"数据列计算","status":"default"},"ports":[{"id":"15-1","group":"top"},{"id":"15-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":16,"label":"数据值替换","name":"数据值替换","status":"default"},"ports":[{"id":"16-1","group":"top"},{"id":"16-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":17,"label":"缺失值填补","name":"缺失值填补","status":"default"},"ports":[{"id":"17-1","group":"top"},{"id":"17-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":18,"label":"数据按列值排序","name":"数据按列值排序","status":"default"},"ports":[{"id":"18-1","group":"top"},{"id":"18-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":19,"label":"OneHot编码","name":"OneHot编码","status":"default"},"ports":[{"id":"19-1","group":"top"},{"id":"19-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":20,"label":"Z-Score标准化","name":"Z-Score标准化","status":"default"},"ports":[{"id":"20-1","group":"top"},{"id":"20-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":21,"label":"Min-Max标准化","name":"Min-Max标准化","status":"default"},"ports":[{"id":"21-1","group":"top"},{"id":"21-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":22,"label":"Logistic标准化","name":"Logistic标准化","status":"default"},"ports":[{"id":"22-1","group":"top"},{"id":"22-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":23,"label":"最大绝对值标准化","name":"最大绝对值标准化","status":"default"},"ports":[{"id":"23-1","group":"top"},{"id":"23-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":24,"label":"等距离散化","name":"等距离散化","status":"default"},"ports":[{"id":"24-1","group":"top"},{"id":"24-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":25,"label":"等频离散化","name":"等频离散化","status":"default"},"ports":[{"id":"25-1","group":"top"},{"id":"25-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":26,"label":"Kmeans离散化","name":"Kmeans离散化","status":"default"},"ports":[{"id":"26-1","group":"top"},{"id":"26-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":27,"label":"卡方离散化","name":"卡方离散化","status":"default"},"ports":[{"id":"27-1","group":"top"},{"id":"27-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":28,"label":"决策树离散化","name":"决策树离散化","status":"default"},"ports":[{"id":"28-1","group":"top"},{"id":"28-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":29,"label":"主成分分析","name":"主成分分析","status":"default"},"ports":[{"id":"29-1","group":"top"},{"id":"29-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":30,"label":"线性判别分析","name":"线性判别分析","status":"default"},"ports":[{"id":"30-1","group":"top"},{"id":"30-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":31,"label":"线性回归","name":"线性回归","status":"default"},"ports":[{"id":"31-1","group":"top"},{"id":"31-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":32,"label":"LASSO","name":"LASSO","status":"default"},"ports":[{"id":"32-1","group":"top"},{"id":"32-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":33,"label":"岭回归","name":"岭回归","status":"default"},"ports":[{"id":"33-1","group":"top"},{"id":"33-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":34,"label":"弹性网络","name":"弹性网络","status":"default"},"ports":[{"id":"34-1","group":"top"},{"id":"34-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":35,"label":"K近邻回归","name":"K近邻回归","status":"default"},"ports":[{"id":"35-1","group":"top"},{"id":"35-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":36,"label":"回归决策树","name":"回归决策树","status":"default"},"ports":[{"id":"36-1","group":"top"},{"id":"36-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":37,"label":"朴素贝叶斯","name":"朴素贝叶斯","status":"default"},"ports":[{"id":"37-1","group":"top"},{"id":"37-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":38,"label":"线性SVC","name":"线性SVC","status":"default"},"ports":[{"id":"38-1","group":"top"},{"id":"38-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":39,"label":"支持向量机","name":"支持向量机","status":"default"},"ports":[{"id":"39-1","group":"top"},{"id":"39-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":40,"label":"分类决策树","name":"分类决策树","status":"default"},"ports":[{"id":"40-1","group":"top"},{"id":"40-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":41,"label":"逻辑回归","name":"逻辑回归","status":"default"},"ports":[{"id":"41-1","group":"top"},{"id":"41-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":42,"label":"K近邻","name":"K近邻","status":"default"},"ports":[{"id":"42-1","group":"top"},{"id":"42-2","group":"bottom"}]},{"shape":"dagNode","data":{"id":43,"label":"K-Means聚类","name":"K-Means聚类","status":"default"},"ports":[{"id":"43-1","group":"top"},{"id":"43-2","group":"bottom"},{"id":"43-3","group":"bottom"}]},{"shape":"dagNode","data":{"id":44,"label":"DBSCAN","name":"DBSCAN","status":"default"},"ports":[{"id":"44-1","group":"top"},{"id":"44-2","group":"bottom"},{"id":"44-3","group":"bottom"}]},{"shape":"dagNode","data":{"id":45,"label":"聚合聚类","name":"聚合聚类","status":"default"},"ports":[{"id":"45-1","group":"top"},{"id":"45-2","group":"bottom"},{"id":"45-3","group":"bottom"}]},{"shape":"dagNode","data":{"id":46,"label":"MeanShift","name":"MeanShift","status":"default"},"ports":[{"id":"46-1","group":"top"},{"id":"46-2","group":"bottom"},{"id":"46-3","group":"bottom"}]},{"shape":"dagNode","data":{"id":47,"label":"谱聚类","name":"谱聚类","status":"default"},"ports":[{"id":"47-1","group":"top"},{"id":"47-2","group":"bottom"},{"id":"47-3","group":"bottom"}]},{"shape":"dagNode","data":{"id":48,"label":"模型预测","name":"模型预测","status":"default"},"ports":[{"id":"48-1","group":"top"},{"id":"48-2","group":"top"},{"id":"48-3","group":"bottom"}]},{"shape":"dagNode","data":{"id":49,"label":"回归模型评估","name":"回归模型评估","status":"default"},"ports":[{"id":"49-1","group":"top"},{"id":"49-2","group":"top"}]},{"shape":"dagNode","data":{"id":50,"label":"分类模型评估","name":"分类模型评估","status":"default"},"ports":[{"id":"50-1","group":"top"},{"id":"50-2","group":"top"}]}]');let dt=(0,r.qj)({id:null,title:null,name:null,content:{}});Z.kJ.registerEdge("dagEdge",{inherit:"edge",attrs:{line:{stroke:"#C2C8D5",strokeWidth:1,targetMarker:null}}},!0),Z.kJ.registerConnector("dagConnector",((t,e)=>{const a=4,o=Math.abs(e.y-t.y),l=Math.floor(o/3*2),s={x:t.x,y:t.y+a+l},n={x:e.x,y:e.y-a-l};return Z.y$.normalize(`M ${t.x} ${t.y}\n       L ${t.x} ${t.y+a}\n       C ${s.x} ${s.y} ${n.x} ${n.y} ${e.x} ${e.y-a}\n       L ${e.x} ${e.y}\n      `)}),!0);var ct=(0,l.aZ)({name:"homeView",data(){return{selectedRows:[],selectedRowKeys:[],selectedRowName:null,data:(0,r.qj)({dataBase:[],dataColumns:[]}),showData:!1}},setup(){let t,e,a=(0,r.qj)({graph:null}),o=[],s=(0,r.iH)([]),n=(0,r.iH)([]),i=(0,r.iH)(!1),d=(0,r.iH)({label:null,result:null,dataColumns:null,ratios:null});(0,r.iH)(null);const c=t=>{s.value=t},u=t=>{n.value=t},g=t=>{console.log("弹出结果框"),d.value=null,d.value=t.info,console.log(d.value),i.value=t.showBasicInfo};function h(){(0,l.Y3)((()=>{let t=nt.JE(document.getElementById("relation_heatmap"));null==t&&(t=nt.S1(document.getElementById("relation_heatmap")));let e=[];d.value.result.forEach(((t,a)=>{let o=Object.keys(t);for(let l=1;l<o.length;l++)e.push([l-1,a,t[o[l]]])})),console.log(e),e=e.map((function(t){return[t[1],t[0],t[2]]}));let a={tooltip:{position:"top"},toolbox:{feature:{saveAsImage:{}}},animation:!1,grid:{height:"50%",left:"13%",top:"20"},xAxis:{type:"category",data:d.value.dataColumns.slice(1),splitArea:{show:!0}},yAxis:{type:"category",data:d.value.dataColumns.slice(1),splitArea:{show:!0}},visualMap:{min:-1,max:1,align:"top",calculable:!0,left:"center",orient:"horizontal",inRange:{color:["white","rgb(191,68,76)"]}},series:[{name:"data_col",type:"heatmap",data:e,emphasis:{itemStyle:{shadowBlur:10,shadowColor:"white"}}}]};t.setOption(a)}))}function m(){(0,l.Y3)((()=>{let t=nt.JE(document.getElementById("pie_10"));null==t&&(t=nt.S1(document.getElementById("pie_10")));let e=d.value.result;const a={tooltip:{position:"top"},toolbox:{feature:{saveAsImage:{}}},legend:{data:["训练集","测试集"],left:"right",top:"30%",orient:"vertical"},series:[{type:"pie",data:[{value:e.index_counts[0],name:e.index_cols[0]},{value:e.index_counts[1],name:e.index_cols[1]}]}]};t.setOption(a)}))}function p(){(0,l.Y3)((()=>{let t=nt.JE(document.getElementById("histogram_29"));null==t&&(t=nt.S1(document.getElementById("histogram_29")));let e=[],a=[];d.value.ratios.forEach((t=>{e.push(t["主成分"]),a.push(t["ratios"])}));const o={tooltip:{position:"top"},toolbox:{feature:{saveAsImage:{}}},title:{text:"PCA主成分方差比例",left:"center",top:"bottom"},xAxis:{data:e,name:"成分",nameLocation:"center"},yAxis:{name:"方差比例",nameRotate:"90",nameLocation:"center",nameGap:40},series:[{type:"bar",data:a}]};t.setOption(o)}))}function f(){(0,l.Y3)((()=>{let t=nt.JE(document.getElementById("histogram_30"));null==t&&(t=nt.S1(document.getElementById("histogram_30")));let e=[],a=[];d.value.ratios.forEach((t=>{e.push(t["主成分"]),a.push(t["ratios"])}));const o={tooltip:{position:"top"},toolbox:{feature:{saveAsImage:{}}},title:{text:"LDA主成分方差比例",left:"center",top:"bottom"},xAxis:{data:e,name:"成分",nameLocation:"center"},yAxis:{name:"方差比例",nameRotate:"90",nameLocation:"center",nameGap:40},series:[{type:"bar",data:a}]};t.setOption(o)}))}function _(){(0,l.Y3)((()=>{let t=nt.JE(document.getElementById("histogram_36"));null==t&&(t=nt.S1(document.getElementById("histogram_36")));let e=Object.keys(d.value.result[0]),a=Object.values(d.value.result[0]);const o={tooltip:{position:"top"},toolbox:{feature:{saveAsImage:{}}},title:{text:"决策树特征重要度",left:"center",top:"bottom"},xAxis:{data:e},yAxis:{name:"特征重要度",nameRotate:"90",nameLocation:"center",nameGap:40},series:[{type:"bar",data:a}]};t.setOption(o)}))}function k(){a.graph.on("cell:click",(({cell:t})=>{if(e=t,dt.id=t.getData()?.id,dt.title=t.getData().label,dt.name=t.getData().name,1==dt.id?(dt.content={},dt.content["dataSource"]=t.getData().dataSource):2==dt.id||3==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn):4==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,dt.content["indicator"]=t.getData().indicator):5==dt.id?(dt.content={},void 0==t.getData().checked&&(t.getData().checked=!1),dt.content["checked"]=t.getData().checked):6==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,dt.content["method"]=t.getData().method,void 0==t.getData().checked&&(t.getData().checked=!1),dt.content["checked"]=t.getData().checked):7==dt.id?(dt.content={},void 0==t.getData().checked&&(t.getData().checked=!1),dt.content["checked"]=t.getData().checked):8==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,dt.content["similarity"]=t.getData().similarity):9==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn):10==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,dt.content["characterColumn1"]=t.getData().characterColumn1,void 0==t.getData().testSize&&(t.getData().testSize=.2),dt.content["testSize"]=t.getData().testSize,void 0==t.getData().randomState&&(t.getData().randomState=0),dt.content["randomState"]=t.getData().randomState,void 0==t.getData().checked&&(t.getData().checked=!1),dt.content["checked"]=t.getData().checked):11==dt.id||12==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn):13==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,void 0==t.getData().type&&(t.getData().type="int32"),dt.content["type"]=t.getData().type):14==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,dt.content["newName"]=t.getData().newName):15==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,dt.content["computeType"]=t.getData().computeType,dt.content["computeNum"]=t.getData().computeNum):16==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,dt.content["substituteMethod"]=t.getData().substituteMethod,dt.content["bySub"]=t.getData().bySub,dt.content["sub"]=t.getData().sub):17==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,void 0==t.getData().fillMethod&&(t.getData().fillMethod="均值"),dt.content["fillMethod"]=t.getData().fillMethod,dt.content["specificNum"]=t.getData().specificNum):18==dt.id||19==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,void 0==t.getData().checked&&(t.getData().checked=!1),dt.content["checked"]=t.getData().checked):20==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn):21==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,dt.content["minNum"]=t.getData().minNum,dt.content["maxNum"]=t.getData().maxNum):22==dt.id||23==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn):24==dt.id||25==dt.id||26==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,void 0==t.getData().numOfDuan&&(t.getData().numOfDuan=5),dt.content["numOfDuan"]=t.getData().numOfDuan):27==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,dt.content["characterColumn1"]=t.getData().characterColumn1,void 0==t.getData().numOfBox&&(t.getData().numOfBox=10),dt.content["numOfBox"]=t.getData().numOfBox):28==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,dt.content["characterColumn1"]=t.getData().characterColumn1,dt.content["modelType"]=t.getData().modelType,void 0==t.getData().numOfBox&&(t.getData().numOfBox=10),dt.content["numOfBox"]=t.getData().numOfBox):29==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,void 0==t.getData().numOfDim&&(t.getData().numOfDim=2),dt.content["numOfDim"]=t.getData().numOfDim):30==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,dt.content["characterColumn1"]=t.getData().characterColumn1,void 0==t.getData().numOfDim&&(t.getData().numOfDim=2),dt.content["numOfDim"]=t.getData().numOfDim):31==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,dt.content["characterColumn1"]=t.getData().characterColumn1,void 0==t.getData().checked&&(t.getData().checked=!1),void 0==t.getData().checked1&&(t.getData().checked1=!1),dt.content["checked"]=t.getData().checked,dt.content["checked1"]=t.getData().checked1):32==dt.id||33==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,dt.content["characterColumn1"]=t.getData().characterColumn1,void 0==t.getData().normalNum&&(t.getData().normalNum=1),dt.content["normalNum"]=t.getData().normalNum,void 0==t.getData().checked&&(t.getData().checked=!1),void 0==t.getData().checked1&&(t.getData().checked1=!1),dt.content["checked"]=t.getData().checked,dt.content["checked1"]=t.getData().checked1):34==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,dt.content["characterColumn1"]=t.getData().characterColumn1,void 0==t.getData().normalNum&&(t.getData().normalNum=.5),void 0==t.getData().normalNum1&&(t.getData().normalNum1=.5),dt.content["normalNum"]=t.getData().normalNum,dt.content["normalNum1"]=t.getData().normalNum1,void 0==t.getData().checked&&(t.getData().checked=!1),void 0==t.getData().checked1&&(t.getData().checked1=!1),dt.content["checked"]=t.getData().checked,dt.content["checked1"]=t.getData().checked1):35==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,dt.content["characterColumn1"]=t.getData().characterColumn1,void 0==t.getData().numberOfNeighbor&&(t.getData().numberOfNeighbor=5),dt.content["numberOfNeighbor"]=t.getData().numberOfNeighbor,dt.content["weightType"]=t.getData().weightType,dt.content["distanceType"]=t.getData().distanceType):36==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,dt.content["characterColumn1"]=t.getData().characterColumn1,void 0==t.getData().maxDepth&&(t.getData().maxDepth=3),void 0==t.getData().minSplit&&(t.getData().minSplit=5),void 0==t.getData().minLeaf&&(t.getData().minLeaf=5),dt.content["maxDepth"]=t.getData().maxDepth,dt.content["minSplit"]=t.getData().minSplit,dt.content["minLeaf"]=t.getData().minLeaf):37==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,dt.content["characterColumn1"]=t.getData().characterColumn1,dt.content["bayesType"]=t.getData().bayesType,void 0==t.getData().smooth&&(t.getData().smooth=1),void 0==t.getData().checked&&(t.getData().checked=!1),void 0==t.getData().binarization&&(t.getData().binarization=1),dt.content["smooth"]=t.getData().smooth,dt.content["checked"]=t.getData().checked,dt.content["binarization"]=t.getData().binarization):38==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,dt.content["characterColumn1"]=t.getData().characterColumn1,void 0==t.getData().normalNum&&(t.getData().normalNum=1),void 0==t.getData().checked&&(t.getData().checked=!1),void 0==t.getData().minConverge&&(t.getData().minConverge=1e-4),void 0==t.getData().maxIter&&(t.getData().maxIter=1e3),dt.content["normalNum"]=t.getData().normalNum,dt.content["minConverge"]=t.getData().minConverge,dt.content["maxIter"]=t.getData().maxIter,dt.content["checked"]=t.getData().checked):39==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,dt.content["characterColumn1"]=t.getData().characterColumn1,void 0==t.getData().trainMaxError&&(t.getData().trainMaxError=.5),void 0==t.getData().coef0&&(t.getData().coef0=0),void 0==t.getData().degree&&(t.getData().degree=3),dt.content["trainMaxError"]=t.getData().trainMaxError,dt.content["coreFunction"]=t.getData().coreFunction,dt.content["gamma"]=t.getData().gamma,dt.content["coef0"]=t.getData().coef0,dt.content["degree"]=t.getData().degree,dt.content["classWeight"]=t.getData().classWeight):40==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,dt.content["characterColumn1"]=t.getData().characterColumn1,void 0==t.getData().maxDepth&&(t.getData().maxDepth=3),void 0==t.getData().minSplit&&(t.getData().minSplit=5),void 0==t.getData().minLeaf&&(t.getData().minLeaf=5),dt.content["maxDepth"]=t.getData().maxDepth,dt.content["minSplit"]=t.getData().minSplit,dt.content["minLeaf"]=t.getData().minLeaf):41==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,dt.content["characterColumn1"]=t.getData().characterColumn1,dt.content["normalItem"]=t.getData().normalItem,void 0==t.getData().normalNum&&(t.getData().normalNum=1),void 0==t.getData().minConverge&&(t.getData().minConverge=1e-4),void 0==t.getData().randomState&&(t.getData().randomState=10),dt.content["normalNum"]=t.getData().normalNum,dt.content["minConverge"]=t.getData().minConverge,dt.content["randomState"]=t.getData().randomState,dt.content["classWeight"]=t.getData().classWeight):42==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,dt.content["characterColumn1"]=t.getData().characterColumn1,void 0==t.getData().numberOfNeighbor&&(t.getData().numberOfNeighbor=5),dt.content["numberOfNeighbor"]=t.getData().numberOfNeighbor,dt.content["weightType"]=t.getData().weightType,dt.content["distanceType"]=t.getData().distanceType):43==dt.id?(dt.content={},dt.content["characterColumn"]=t.getData().characterColumn,dt.content["numOfCluster"]=t.getData().numOfCluster?t.getData().numOfCluster:8,dt.content["centerInitial"]=t.getData().centerInitial,dt.content["initialTimes"]=t.getData().initialTimes?t.getData().initialTimes:10,dt.content["maxIter"]=t.getData().maxIter?t.getData().maxIter:300,dt.content["minConverge"]=t.getData().minConverge?t.getData().minConverge:1e-4,dt.content["randomState"]=t.getData().randomState?t.getData().randomState:10):49==dt.id?(dt.content={},dt.content["characterColumn1"]=t.getData().characterColumn1,dt.content["checked"]=t.getData().checked,dt.content["checked1"]=t.getData().checked1,dt.content["checked2"]=t.getData().checked2,dt.content["checked3"]=t.getData().checked3,dt.content["checked4"]=t.getData().checked4,dt.content["checked5"]=t.getData().checked5,dt.content["checked6"]=t.getData().checked6,dt.content["checked7"]=t.getData().checked7,dt.content["checked8"]=t.getData().checked8):50==dt.id&&(dt.content={},dt.content["characterColumn1"]=t.getData().characterColumn1,dt.content["positiveTag"]=t.getData().positiveTag),void 0!=t.getData().lastOutput){let e=[];Object.keys(t.getData().lastOutput[0]).forEach((t=>{e.push({value:t,label:t})})),s.value=e,n.value=e}}))}function w(){e.getData().name=dt.name}(0,l.YP)((()=>dt.content.dataSource),((t,e)=>{b()}),{immediate:!1,deep:!0}),(0,l.bv)((()=>{a.graph=new Z.kJ({container:document.getElementById("container"),height:window.innerHeight,background:{color:"white"},grid:{size:10,visible:!0},panning:{enabled:!0,eventTypes:["leftMouseDown","mouseWheel"]},mousewheel:{enabled:!0,modifiers:"ctrl",factor:1.1,maxScale:1.5,minScale:.5},highlighting:{magnetAdsorbed:{name:"stroke",args:{attrs:{fill:"#fff",stroke:"#31d0c6",strokeWidth:4}}}},connecting:{snap:!0,allowBlank:!1,allowLoop:!1,highlight:!0,connector:"dagConnector",connectionPoint:"anchor",anchor:"center",validateMagnet({magnet:t}){return"top"!==t.getAttribute("port-group")},createEdge(){return a.graph.createEdge({shape:"dagEdge",attrs:{line:{strokeDasharray:"5 5"}},zIndex:-1})}}}),(0,M.z2)({shape:"dagNode",width:180,height:36,component:{render:()=>(0,l.Wm)(st,{graph:a.graph,onColumns:c,onColumns1:u,onShowInfo:g})},ports:{groups:{top:{position:"top",attrs:{circle:{r:4,magnet:!0,stroke:"#C2C8D5",strokeWidth:1,fill:"#fff"}}},bottom:{position:"bottom",attrs:{circle:{r:4,magnet:!0,stroke:"#C2C8D5",strokeWidth:1,fill:"#fff"}}}}}}),a.graph.use(new A.Y({enabled:!0,multiple:!0,rubberEdge:!0,rubberNode:!0,modifiers:"shift",rubberband:!0})),a.graph.on("edge:connected",(({edge:t})=>{t.attr({line:{strokeDasharray:""}});const e=t.getSourceCell();if(e.getData().hasOwnProperty("output"))t.getTargetCell().setData({...t.getTargetCell().getData(),lastOutput:e.getData().output});else{const a=e.getData().dataId;t.getTargetCell().setData({...t.getTargetCell().getData(),dataId:a})}})),a.graph.on("node:change:data",(({node:t})=>{const e=a.graph.getIncomingEdges(t),{status:o}=t.getData();e?.forEach((t=>{"running"===o?(t.attr("line/strokeDasharray",5),t.attr("line/style/animation","running-line 30s infinite linear")):(t.attr("line/strokeDasharray",""),t.attr("line/style/animation",""))}))})),t=new L.t({title:"搜索",target:a.graph,search(t,e){return-1!==t.getData().label.indexOf(e)},placeholder:"请输入节点名称",notFoundText:"没有找到",stencilGraphWidth:window.innerWidth/6,collapsable:!0,groups:[{name:"source",collapsable:!0,collapsed:!0,title:"数据源",graphHeight:100,layoutOptions:{columns:1,dx:32+(window.innerWidth/6-180)/2}},{name:"explore",collapsable:!0,collapsed:!0,title:"数据探索",graphHeight:570,layoutOptions:{columns:1,dx:32+(window.innerWidth/6-180)/2}},{name:"sift",collapsable:!0,collapsed:!0,title:"数据筛选",graphHeight:180,layoutOptions:{columns:1,dx:32+(window.innerWidth/6-180)/2}},{name:"transform",collapsable:!0,collapsed:!0,title:"数据转换",graphHeight:660,layoutOptions:{columns:1,dx:32+(window.innerWidth/6-180)/2}},{name:"extraction",collapsable:!0,collapsed:!0,title:"特征抽取",graphHeight:100,layoutOptions:{columns:1,dx:32+(window.innerWidth/6-180)/2}},{name:"normalization",collapsable:!0,collapsed:!0,title:"标准化",graphHeight:330,layoutOptions:{columns:1,dx:33,marginX:(window.innerWidth/6-180)/2}},{name:"discretion",collapsable:!0,collapsed:!0,title:"离散化",graphHeight:410,layoutOptions:{columns:1,dx:32+(window.innerWidth/6-180)/2}},{name:"dimensional",collapsable:!0,collapsed:!0,title:"降维",graphHeight:175,layoutOptions:{columns:1,dx:32+(window.innerWidth/6-180)/2}},{name:"regression",collapsable:!0,collapsed:!0,title:"回归",graphHeight:500,layoutOptions:{columns:1,dx:32+(window.innerWidth/6-180)/2}},{name:"classification",collapsable:!0,collapsed:!0,title:"分类",graphHeight:500,layoutOptions:{columns:1,dx:32+(window.innerWidth/6-180)/2}},{name:"predication",collapsable:!0,collapsed:!0,title:"预测",graphHeight:100,layoutOptions:{columns:1,dx:32+(window.innerWidth/6-180)/2}},{name:"evaluate",collapsable:!0,collapsed:!0,title:"评估",graphHeight:175,layoutOptions:{columns:1,dx:32+(window.innerWidth/6-180)/2}}]}),document.querySelector("#stencil").appendChild(t.container),it.forEach((e=>{o.push(a.graph.createNode(e)),1==o.length?t.load(o,"source"):8==o.length?t.load(o.slice(1),"explore"):10==o.length?t.load(o.slice(8),"sift"):18==o.length?t.load(o.slice(10),"transform"):19==o.length?t.load(o.slice(18),"extraction"):23==o.length?t.load(o.slice(19),"normalization"):28==o.length?t.load(o.slice(23),"discretion"):30==o.length?t.load(o.slice(28),"dimensional"):36==o.length?t.load(o.slice(30),"regression"):42==o.length?t.load(o.slice(36),"classification"):48==o.length?t.load(o.slice(47),"predication"):50==o.length&&t.load(o.slice(48),"evaluate")})),k()}));const D=(0,r.iH)([{value:"show_yuanweihua",label:"鸢尾花数据集"},{value:"show_graduateIncome",label:"大学毕业生收入数据集"}]),C=(t,e)=>e.indexOf(t)>=0;function b(){e.getData().dataSource=dt.content.dataSource}function y(){e.getData().characterColumn=dt.content.characterColumn}function W(){e.getData().characterColumn1=dt.content.characterColumn1}const x=(0,r.iH)([{value:"pearson",label:"Pearson相关系数"},{value:"kendall",label:"Kendall相关系数"},{value:"spearman",label:"Spearman相关系数"}]);function N(){e.getData().indicator=dt.content.indicator}function U(){e.getData().checked=dt.content.checked}function v(){e.getData().checked1=dt.content.checked1}const j=(0,r.iH)([{value:"four",label:"四分位距"},{value:"la",label:"拉伊达准则"}]);function O(){e.getData().method=dt.content.method}const q=(0,r.iH)([{value:"cos",label:"余弦距离"},{value:"ou",label:"欧式距离"},{value:"abs",label:"绝对值距离"}]);function T(){e.getData().similarity=dt.content.similarity}function K(){e.getData().testSize=dt.content.testSize}function S(){e.getData().randomState=dt.content.randomState}const P=(0,r.iH)([{value:"int32",label:"int32"},{value:"int64",label:"int64"},{value:"float32",label:"float32"},{value:"float64",label:"float64"},{value:"object",label:"object"},{value:"bool",label:"bool"},{value:"datetime64",label:"datetime64"}]);function I(){e.getData().type=dt.content.type}function z(){e.getData().newName=dt.content.newName}const H=(0,r.iH)([{value:"plus",label:"加"},{value:"minus",label:"减"},{value:"multiply",label:"乘"},{value:"divide",label:"除"},{value:"involution",label:"乘方"},{value:"disinvolution",label:"开方"}]);function B(){e.getData().computeType=dt.content.computeType}function V(){e.getData().computeNum=dt.content.computeNum}const E=(0,r.iH)([{value:"single",label:"单值替换"},{value:"list",label:"列表替换"}]);function R(){e.getData().substituteMethod=dt.content.substituteMethod}function Y(){e.getData().bySub=dt.content.bySub}function F(){e.getData().sub=dt.content.sub}const $=(0,r.iH)([{value:"mean",label:"均值"},{value:"mode",label:"众数"},{value:"median",label:"中位数"},{value:"specific",label:"指定值"}]);function Q(){e.getData().fillMethod=dt.content.fillMethod}function G(){e.getData().specificNum=dt.content.specificNum}function J(){e.getData().minNum=dt.content.minNum}function X(){e.getData().maxNum=dt.content.maxNum}function tt(){e.getData().numOfDuan=dt.content.numOfDuan}function et(){e.getData().numOfBox=dt.content.numOfBox}const at=(0,r.iH)([{value:"classification",label:"分类"},{value:"regression",label:"回归"}]);function ot(){e.getData().modelType=dt.content.modelType}function lt(){e.getData().numOfDim=dt.content.numOfDim}function ct(){e.getData().normalNum=dt.content.normalNum}function ut(){e.getData().normalNum1=dt.content.normalNum1}function gt(){e.getData().numberOfNeighbor=dt.content.numberOfNeighbor}const ht=(0,r.iH)([{value:"uniform",label:"uniform"},{value:"distance",label:"distance"}]);function rt(){e.getData().weightType=dt.content.weightType}const mt=(0,r.iH)([{value:"euclidean",label:"euclidean"},{value:"manhattan",label:"manhattan"},{value:"chebyshev",label:"chebyshev"},{value:"minkowski",label:"minkowski"}]);function pt(){e.getData().distanceType=dt.content.distanceType}function ft(){e.getData().maxDepth=dt.content.maxDepth}function _t(){e.getData().minSplit=dt.content.minSplit}function kt(){e.getData().minLeaf=dt.content.minLeaf}const wt=(0,r.iH)([{value:"BernoulliNB",label:"BernoulliNB"},{value:"GaussianNB",label:"GaussianNB"},{value:"MultinomialNB",label:"MultinomialNB"}]);function Dt(){e.getData().bayesType=dt.content.bayesType}function Ct(){e.getData().smooth=dt.content.smooth}function bt(){e.getData().binarization=dt.content.binarization}function yt(){e.getData().minConverge=dt.content.minConverge}function Wt(){e.getData().maxIter=dt.content.maxIter}function xt(){e.getData().trainMaxError=dt.content.trainMaxError}const Nt=(0,r.iH)([{value:"rbf",label:"rbf"},{value:"poly",label:"poly"},{value:"sigmoid",label:"sigmoid"}]);function Ut(){e.getData().coreFunction=dt.content.coreFunction}const vt=(0,r.iH)([{value:"scale",label:"scale"},{value:"auto",label:"auto"}]);function jt(){e.getData().gamma=dt.content.gamma}function Ot(){e.getData().coef0=dt.content.coef0}function qt(){e.getData().degree=dt.content.degree}const Tt=(0,r.iH)([{value:"None",label:"None"},{value:"balanced",label:"Balanced"}]);function Kt(){e.getData().classWeight=dt.content.classWeight}const St=(0,r.iH)([{value:"l1",label:"L1"},{value:"l2",label:"L2"},{value:"elasticNet",label:"ElasticNet"},{value:"None",label:"None"}]);function Pt(){e.getData().normalItem=dt.content.normalItem}function It(){e.getData().numOfCluster=dt.content.numOfCluster}const zt=(0,r.iH)([{value:"kmeans",label:"k-means++"},{value:"random",label:"random"}]);function Zt(){e.getData().centerInitial=dt.content.centerInitial}function At(){e.getData().initialTimes=dt.content.initialTimes}function Mt(){e.getData().checked2=dt.content.checked2}function Lt(){e.getData().checked3=dt.content.checked3}function Ht(){e.getData().checked4=dt.content.checked4}function Bt(){e.getData().checked5=dt.content.checked5}function Vt(){e.getData().checked6=dt.content.checked6}function Et(){e.getData().checked7=dt.content.checked7}function Rt(){e.getData().checked8=dt.content.checked8}function Yt(){e.getData().positiveTag=dt.content.positiveTag}const Ft=(0,r.iH)(!1);function $t(){Ft.value=!0}const Qt=t=>{Ft.value=!1},Gt=[{key:1,dataName:"鸢尾花数据集",dataId:1,backendName:"yuanweihua"},{key:2,dataName:"大学毕业生收入数据集",dataId:2,backendName:"graduateIncome"}],Jt=[{title:"dataName",dataIndex:"dataName"}];return{tableData:Gt,columns:Jt,visible:Ft,showModal:$t,handleOk:Qt,formData:dt,filterOption:C,options_1:D,options_4:x,options_6:j,options_8:q,options_13:P,options_15:H,options_16:E,options_17:$,options_28:at,options_35_1:ht,options_35_2:mt,options_37:wt,options_39_1:Nt,options_39_2:vt,options_39_3:Tt,options_41:St,options_43:zt,optionsCharacterColumns:s,optionsCharacterColumns1:n,dialogTableVisible:i,dialogContent:d,onNameChange:w,onDataChange:b,onCharacterChange:y,onIndicatorChange:N,onCheckedChange:U,onCheckedChange1:v,onMethodChange:O,onSimilarityChange:T,onTestSizeChange:K,onRandomStateChange:S,onTypeChange:I,onNewNameChange:z,onComputeTypeChange:B,onComputeNumChange:V,onSubstituteMethodChange:R,onBySubChange:Y,onSubChange:F,onFillMethodChange:Q,onSpecificNumChange:G,onMinNumChange:J,onMaxNumChange:X,onNumOfDuanChange:tt,onCharacterChange1:W,onNumOfBoxChange:et,onModelTypeChange:ot,onNumOfDimChange:lt,onNormalNumChange:ct,onNormalNumChange1:ut,onNumberOfNeighborChange:gt,onWeightTypeChange:rt,onDistanceTypeChange:pt,onMaxDepthChange:ft,onMinSplitChange:_t,onMinLeafChange:kt,onBayesTypeChange:Dt,onSmoothChange:Ct,onBinarizationChange:bt,onMinConvergeChange:yt,onMaxIterChange:Wt,onTrainMaxErrorChange:xt,onCoreFunctionChange:Ut,onGammaChange:jt,onCoef0Change:Ot,onDegreeChange:qt,onClassWeightChange:Kt,onNormalItemChange:Pt,onNumOfClusterChange:It,onCenterInitialChange:Zt,onInitialTimesChange:At,onCheckedChange2:Mt,onCheckedChange3:Lt,onCheckedChange4:Ht,onCheckedChange5:Bt,onCheckedChange6:Vt,onCheckedChange7:Et,onCheckedChange8:Rt,onPositiveTagChange8:Yt,openId4:h,openId10:m,openId29:p,openId30:f,openId36:_}},methods:{onSelectChange(t,e){this.data.dataBase=[],this.data.dataColumns=[],this.selectedRowKeys=t,this.selectedRows=e,this.selectedRowName=e[0].dataName,dt.content.dataSource=e[0].dataName,tt.Z.get("http://127.0.0.1:8000/api/show_"+e[0].backendName).then((t=>{if(console.log(t),"OK"===t.statusText){const e=t.data.list;this.data.dataBase=e,this.data.dataColumns=Object.keys(e[0]),this.showData=!0}}))}},computed:{selectWidth(){return 5*window.innerWidth/24-84-20-10+"px"},numberWidth(){return 5*window.innerWidth/24-112-20-10+"px"}}});const ut=(0,k.Z)(ct,[["render",z]]);var gt=ut;const ht=t=>((0,l.dD)("data-v-78fe643a"),t=t(),(0,l.Cn)(),t),rt=ht((()=>(0,l._)("span",null,"数据源",-1))),mt=ht((()=>(0,l._)("span",null,"数据探索",-1))),pt=ht((()=>(0,l._)("span",null," 筛选与分组 ",-1))),ft=ht((()=>(0,l._)("span",null,"数据转换",-1))),_t=ht((()=>(0,l._)("span",null,"特征抽取",-1))),kt=ht((()=>(0,l._)("span",null,"标准化",-1))),wt=ht((()=>(0,l._)("span",null,"离散化",-1))),Dt=ht((()=>(0,l._)("span",null,"降维",-1))),Ct=ht((()=>(0,l._)("span",null,"回归",-1))),bt=ht((()=>(0,l._)("span",null,"分类",-1)));function yt(t,e,a,s,n,i){const d=(0,l.up)("a-menu-item"),c=(0,l.up)("a-sub-menu"),u=(0,l.up)("a-menu"),g=(0,l.up)("a-layout-sider"),h=(0,l.up)("a-col"),r=(0,l.up)("el-text"),m=(0,l.up)("el-image"),p=(0,l.up)("el-space"),f=(0,l.up)("a-layout-content"),_=(0,l.up)("a-layout"),k=(0,l.up)("a-row");return(0,l.wg)(),(0,l.j4)(k,null,{default:(0,l.w5)((()=>[(0,l.Wm)(h,{span:4},{default:(0,l.w5)((()=>[(0,l.Wm)(g,{style:{background:"#fff"}},{default:(0,l.w5)((()=>[(0,l.Wm)(u,{mode:"inline",style:(0,W.j5)({height:"100%",borderRight:0,width:n.menuWidth})},{default:(0,l.w5)((()=>[(0,l.Wm)(c,{key:"sub1"},{title:(0,l.w5)((()=>[rt])),default:(0,l.w5)((()=>[(0,l.Wm)(d,{key:"1",onClick:e[0]||(e[0]=t=>i.changePage(1))},{default:(0,l.w5)((()=>[(0,l.Uk)("读数据表")])),_:1})])),_:1}),(0,l.Wm)(c,{key:"sub2"},{title:(0,l.w5)((()=>[mt])),default:(0,l.w5)((()=>[(0,l.Wm)(d,{key:"2",onClick:e[1]||(e[1]=t=>i.changePage(2))},{default:(0,l.w5)((()=>[(0,l.Uk)("字段基本信息统计")])),_:1}),(0,l.Wm)(d,{key:"3",onClick:e[2]||(e[2]=t=>i.changePage(3))},{default:(0,l.w5)((()=>[(0,l.Uk)("查看唯一值及数量")])),_:1}),(0,l.Wm)(d,{key:"4",onClick:e[3]||(e[3]=t=>i.changePage(4))},{default:(0,l.w5)((()=>[(0,l.Uk)("数据相关性")])),_:1}),(0,l.Wm)(d,{key:"5",onClick:e[4]||(e[4]=t=>i.changePage(5))},{default:(0,l.w5)((()=>[(0,l.Uk)("缺失值检测")])),_:1}),(0,l.Wm)(d,{key:"6",onClick:e[5]||(e[5]=t=>i.changePage(6))},{default:(0,l.w5)((()=>[(0,l.Uk)("单变量异常值检测")])),_:1}),(0,l.Wm)(d,{key:"7",onClick:e[6]||(e[6]=t=>i.changePage(7))},{default:(0,l.w5)((()=>[(0,l.Uk)("重复值检测")])),_:1}),(0,l.Wm)(d,{key:"8",onClick:e[7]||(e[7]=t=>i.changePage(8))},{default:(0,l.w5)((()=>[(0,l.Uk)("样本相似度计算")])),_:1})])),_:1}),(0,l.Wm)(c,{key:"sub3"},{title:(0,l.w5)((()=>[pt])),default:(0,l.w5)((()=>[(0,l.Wm)(d,{key:"9",onClick:e[8]||(e[8]=t=>i.changePage(9))},{default:(0,l.w5)((()=>[(0,l.Uk)("列删除")])),_:1}),(0,l.Wm)(d,{key:"10",onClick:e[9]||(e[9]=t=>i.changePage(10))},{default:(0,l.w5)((()=>[(0,l.Uk)("训练/测试集划分")])),_:1})])),_:1}),(0,l.Wm)(c,{key:"sub4"},{title:(0,l.w5)((()=>[ft])),default:(0,l.w5)((()=>[(0,l.Wm)(d,{key:"11",onClick:e[10]||(e[10]=t=>i.changePage(11))},{default:(0,l.w5)((()=>[(0,l.Uk)("数字编码")])),_:1}),(0,l.Wm)(d,{key:"13",onClick:e[11]||(e[11]=t=>i.changePage(13))},{default:(0,l.w5)((()=>[(0,l.Uk)("类型转换")])),_:1}),(0,l.Wm)(d,{key:"14",onClick:e[12]||(e[12]=t=>i.changePage(14))},{default:(0,l.w5)((()=>[(0,l.Uk)("列重命名")])),_:1}),(0,l.Wm)(d,{key:"15",onClick:e[13]||(e[13]=t=>i.changePage(15))},{default:(0,l.w5)((()=>[(0,l.Uk)("数据列计算")])),_:1}),(0,l.Wm)(d,{key:"16",onClick:e[14]||(e[14]=t=>i.changePage(16))},{default:(0,l.w5)((()=>[(0,l.Uk)("数据值替换")])),_:1}),(0,l.Wm)(d,{key:"17",onClick:e[15]||(e[15]=t=>i.changePage(17))},{default:(0,l.w5)((()=>[(0,l.Uk)("缺失值填补")])),_:1}),(0,l.Wm)(d,{key:"18",onClick:e[16]||(e[16]=t=>i.changePage(18))},{default:(0,l.w5)((()=>[(0,l.Uk)("数据按列值排序")])),_:1})])),_:1}),(0,l.Wm)(c,{key:"sub5"},{title:(0,l.w5)((()=>[_t])),default:(0,l.w5)((()=>[(0,l.Wm)(d,{key:"19",onClick:e[17]||(e[17]=t=>i.changePage(19))},{default:(0,l.w5)((()=>[(0,l.Uk)("OneHot编码")])),_:1})])),_:1}),(0,l.Wm)(c,{key:"sub6"},{title:(0,l.w5)((()=>[kt])),default:(0,l.w5)((()=>[(0,l.Wm)(d,{key:"20",onClick:e[18]||(e[18]=t=>i.changePage(20))},{default:(0,l.w5)((()=>[(0,l.Uk)("Z-Score标准化")])),_:1}),(0,l.Wm)(d,{key:"21",onClick:e[19]||(e[19]=t=>i.changePage(21))},{default:(0,l.w5)((()=>[(0,l.Uk)("Min-Max标准化")])),_:1}),(0,l.Wm)(d,{key:"22",onClick:e[20]||(e[20]=t=>i.changePage(22))},{default:(0,l.w5)((()=>[(0,l.Uk)("Logistic标准化")])),_:1}),(0,l.Wm)(d,{key:"23",onClick:e[21]||(e[21]=t=>i.changePage(23))},{default:(0,l.w5)((()=>[(0,l.Uk)("最大绝对值标准化")])),_:1})])),_:1}),(0,l.Wm)(c,{key:"sub7"},{title:(0,l.w5)((()=>[wt])),default:(0,l.w5)((()=>[(0,l.Wm)(d,{key:"24",onClick:e[22]||(e[22]=t=>i.changePage(24))},{default:(0,l.w5)((()=>[(0,l.Uk)("等距离散化")])),_:1}),(0,l.Wm)(d,{key:"25",onClick:e[23]||(e[23]=t=>i.changePage(25))},{default:(0,l.w5)((()=>[(0,l.Uk)("等频离散化")])),_:1}),(0,l.Wm)(d,{key:"26",onClick:e[24]||(e[24]=t=>i.changePage(26))},{default:(0,l.w5)((()=>[(0,l.Uk)("Kmeans离散化")])),_:1}),(0,l.Wm)(d,{key:"27",onClick:e[25]||(e[25]=t=>i.changePage(27))},{default:(0,l.w5)((()=>[(0,l.Uk)("卡方离散化")])),_:1}),(0,l.Wm)(d,{key:"28",onClick:e[26]||(e[26]=t=>i.changePage(28))},{default:(0,l.w5)((()=>[(0,l.Uk)("决策树离散化")])),_:1})])),_:1}),(0,l.Wm)(c,{key:"sub8"},{title:(0,l.w5)((()=>[Dt])),default:(0,l.w5)((()=>[(0,l.Wm)(d,{key:"29",onClick:e[27]||(e[27]=t=>i.changePage(29))},{default:(0,l.w5)((()=>[(0,l.Uk)("主成分分析")])),_:1}),(0,l.Wm)(d,{key:"30",onClick:e[28]||(e[28]=t=>i.changePage(30))},{default:(0,l.w5)((()=>[(0,l.Uk)("线性判别分析")])),_:1})])),_:1}),(0,l.Wm)(c,{key:"sub9"},{title:(0,l.w5)((()=>[Ct])),default:(0,l.w5)((()=>[(0,l.Wm)(d,{key:"31",onClick:e[29]||(e[29]=t=>i.changePage(31))},{default:(0,l.w5)((()=>[(0,l.Uk)("线性回归")])),_:1}),(0,l.Wm)(d,{key:"32",onClick:e[30]||(e[30]=t=>i.changePage(32))},{default:(0,l.w5)((()=>[(0,l.Uk)("LASSO")])),_:1}),(0,l.Wm)(d,{key:"33",onClick:e[31]||(e[31]=t=>i.changePage(33))},{default:(0,l.w5)((()=>[(0,l.Uk)("岭回归")])),_:1}),(0,l.Wm)(d,{key:"34",onClick:e[32]||(e[32]=t=>i.changePage(34))},{default:(0,l.w5)((()=>[(0,l.Uk)("弹性网络")])),_:1}),(0,l.Wm)(d,{key:"35",onClick:e[33]||(e[33]=t=>i.changePage(35))},{default:(0,l.w5)((()=>[(0,l.Uk)("K近邻回归")])),_:1}),(0,l.Wm)(d,{key:"36",onClick:e[34]||(e[34]=t=>i.changePage(36))},{default:(0,l.w5)((()=>[(0,l.Uk)("回归决策树")])),_:1})])),_:1}),(0,l.Wm)(c,{key:"sub10"},{title:(0,l.w5)((()=>[bt])),default:(0,l.w5)((()=>[(0,l.Wm)(d,{key:"37",onClick:e[35]||(e[35]=t=>i.changePage(37))},{default:(0,l.w5)((()=>[(0,l.Uk)("朴素贝叶斯")])),_:1}),(0,l.Wm)(d,{key:"38",onClick:e[36]||(e[36]=t=>i.changePage(38))},{default:(0,l.w5)((()=>[(0,l.Uk)("线性SVC")])),_:1}),(0,l.Wm)(d,{key:"39",onClick:e[37]||(e[37]=t=>i.changePage(39))},{default:(0,l.w5)((()=>[(0,l.Uk)("支持向量机")])),_:1}),(0,l.Wm)(d,{key:"40",onClick:e[38]||(e[38]=t=>i.changePage(40))},{default:(0,l.w5)((()=>[(0,l.Uk)("分类决策树")])),_:1}),(0,l.Wm)(d,{key:"41",onClick:e[39]||(e[39]=t=>i.changePage(41))},{default:(0,l.w5)((()=>[(0,l.Uk)("逻辑回归")])),_:1}),(0,l.Wm)(d,{key:"42",onClick:e[40]||(e[40]=t=>i.changePage(42))},{default:(0,l.w5)((()=>[(0,l.Uk)("K近邻")])),_:1})])),_:1})])),_:1},8,["style"])])),_:1})])),_:1}),(0,l.Wm)(h,{span:20},{default:(0,l.w5)((()=>[(0,l.Wm)(_,{style:{padding:"0 24px 24px"}},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(n.id_to_name,((t,e)=>(0,l.wy)(((0,l.wg)(),(0,l.j4)(r,{style:{color:"black","font-size":"30px",margin:"16px","font-weight":"bold"}},{default:(0,l.w5)((()=>[(0,l.Uk)((0,W.zw)(t),1)])),_:2},1536)),[[o.F8,n.pageId==e]]))),256)),(0,l.Wm)(f,{style:{background:"#F0F2F5",padding:"24px",margin:0}},{default:(0,l.w5)((()=>[1==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:0,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("从已有数据集列表选择数据集读取数据。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 选取数据集：可选参数，可选择不同行业的数据集。")])),_:1}),(0,l.Wm)(m,{style:{width:"500px",height:"330px","margin-bottom":"30px","margin-left":"130px"},src:n.photo1_1},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，输出桩返回读取的数据对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("显示数据集基本信息和预览数据。")])),_:1}),(0,l.Wm)(m,{src:n.photo1_2,style:{width:"500px",height:"350px","margin-bottom":"30px","margin-left":"130px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("从平台数据集或用户自己的数据集中选取要分析的数据集。")])),_:1})])),_:1})):(0,l.kq)("",!0),2==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:1,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("对某些数据字段进行统计分析，并展示相应的信息。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 统计列：选择指定的一个或多个数据字段进行基本信息统计。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回数据字段信息基本统计后的数据对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回数据字段信息基本统计后的数据对象。")])),_:1}),(0,l.Wm)(m,{src:n.photo2,style:{width:"500px",height:"350px","margin-bottom":"30px","margin-left":"130px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 基于选定的一个或多个字段，计算该字段下样本数量、不同取值个数、众数、众数的频数、均值、标准差、最小值、上四分位数、中位数、下四分位数、最大值等信息，帮助更好地对数据集字段进行初步诊断。 ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("部分统计指标介绍如下：")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 样本数：非空值的数量")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 众数：出现次数最多的取值")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 众数的频数：众数的出现次数")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 下四分位数：将全部数据从小到大排列，正好排列在25%位置上的数")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 上四分位数：将全部数据从小到大排列，正好排列在75%位置上的数")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("对于不同类型的变量，我们会采用不同统计指标：")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 对于连续型变量，通常会统计样本数、均值、标准差、最小值、上四分位数、中位数、下四分位数、最小值和最大值等指标。 ")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 对于离散型变量，通常会统计样本数、不同取值个数、众数、众数的频数等指标。")])),_:1})])),_:1})):(0,l.kq)("",!0),3==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:2,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("查看某些数据字段的唯一取值，以及这些取值在该字段中出现的次数。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 统计列：选择一个指定的数据字段查看其唯一取值及数量。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回指定的数据字段的唯一值及数量的信息，保存在表格中。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回指定的数据字段的唯一值及数量的信息。")])),_:1}),(0,l.Wm)(m,{src:n.photo3,class:"images",style:{width:"500px",height:"200px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 可以查看一个指定字段中有多少个不同的数据值，并计算不同值出现的频数。查看唯一值对了解数据的分布、是否存在异常值和错误值，都有着重要意义。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),4==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:3,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("计算数据集中数值型特征之间的相关性。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 选择列：选择指定的多个关心的数值型字段，考察这些数值型字段的相关性。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 相关性指标：相关性计算指标，分别为Pearson相关系数、Spearman相关系数和Kendall相关系数，默认为Pearson相关系数。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回指定数据字段的相关性矩阵，保存在表格中。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回指定数据字段的相关性矩阵以及相关性热力图。")])),_:1}),(0,l.Wm)(m,{src:n.photo4,class:"images",style:{width:"500px",height:"450px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 相关性可以衡量变量间的关联程度。本组件基于选定的若干个字段，考察这些字段两两之间的相关性，并返回字段相关性矩阵。 ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("计算指标包括Pearson相关系数、Spearman相关系数和Kendall相关系数。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● Pearson相关系数描述的是连续变量的线性相关关系。相关系数计算结果通常介于-1和1之间。若相关系数为0，则表示两个变量间无线性关系；大于0表示正相关；小于0表示负相关。计算公式如下： ")])),_:1}),(0,l.Wm)(m,{src:n.photo4_2,class:"images",style:{width:"270px",height:"70px"}},null,8,["src"]),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● Spearman相关系数是无参数的等级相关系数，即其值与两个相关变量的具体值无关，而仅仅与其值之间的大小关系有关。计算公式如下。其中，di表示两个变量分别排序后成对的变量位置差，N表示样本数量： ")])),_:1}),(0,l.Wm)(m,{src:n.photo4_3,class:"images",style:{width:"170px",height:"55px"}},null,8,["src"]),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● Kendall相关系数描述的是有序分类变量的相关关系，属于等级相关系数。相关系数计算结果通常介于-1和1之间。变量排序一致，则为1， 排序完全相反则为-1。计算公式如下： ")])),_:1}),(0,l.Wm)(m,{src:n.photo4_4,class:"images",style:{width:"400px",height:"70px"}},null,8,["src"])])),_:1})):(0,l.kq)("",!0),5==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:4,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("检测数据中是否存在缺失值，并可选是否直接过滤缺失值。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 过滤缺失值：控制是否直接过滤检测到的缺失值所在的行，默认不勾选。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回过滤缺失值后的数据对象，若不存在缺失值或不勾选过滤缺失值，返回原数据对象。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 返回数据的每个字段名称与这些字段中的缺失值数量组成的表格，然后返回本次过滤的缺失值行数。下面是对一份鸢尾花数据集进行缺失值检测后的报告： ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("数据缺失值情况：")])),_:1}),(0,l.Wm)(m,{src:n.photo5,class:"images",style:{width:"500px",height:"270px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 缺失值检测是数据质量诊断的重要手段，可以查看字段的缺失值数量，如存在缺失值，则计算缺失值数量或占比。过滤缺失值可以过滤掉缺失值所在行，过滤后可以得到一个完整的数据子集，便于后续数据处理。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),6==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:5,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("检测数据中的数值型字段是否存在异常值。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 检测列：选择一个或多个数值型数据字段，检测每一列的异常值。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 检测方式：检测异常值所采用的策略，包括两种，四分位距和拉伊达准侧，默认为四分位距策略。 ")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 是否过滤异常值：是否直接过滤检测到的异常值所在的行，默认为是，将每个列检测出的异常值取并集后一起过滤。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回过滤异常值后的数据对象，若不存在异常值或不勾选过滤异常值，返回原数据对象。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 返回检测到的异常值行数，然后返回这些异常值行数据，以及过滤这些异常值行所得到的数据。 ")])),_:1}),(0,l.Wm)(m,{src:n.photo6,class:"images",style:{width:"500px",height:"500px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("检测策略共有四分位距和拉伊达准则两种。")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 四分位距策略首先找到该数据字段的下四分位数，中位数和上四分位数，分别标记为Q1,Q2,Q3。上四分位数和下四分位数的差标记为IQR。在该策略下，数据字段的最大值估计为Q3 + 1.5*IQR，最小值估计为Q1 - 1.5*IQR。则低于最小值估计，或高于最大值估计的数据均被标记为异常值。 ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 拉伊达准则又被称为3σ策略，一般要求数据服从或近似服从正态分布。假设数据的均值为mean，标准差为std，该策略假定数据服从均值为mean，标准差为std的正态分布，并将大于mean + 3*std或小于mean - 3*std的数据标记为异常值。在标准正态分布中，数据落在这两个值之间的概率为99.74%。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),7==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:6,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("检测数据中是否存在完全重复的行。")])),_:1}),(0,l.Wm)(r,{class:"sub_head",style:{"margin-bottom":"20px"}},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回所检测到的数据中完全重复的行。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回所检测到的重复行数量，然后返回所检测到的完全重复的行数据信息。")])),_:1}),(0,l.Wm)(m,{src:n.photo7,class:"images",style:{width:"500px",height:"270px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 检测数据中是否存在完全重复的行，若存在则返回重复行数量及完全重复的行数据信息；不存在则返回原数据。删除重复值可以有效提高数据质量。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),8==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:7,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("可用于计算样本间的相似度计算，返回相关性矩阵，从而确定相关性。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 计算列：选择每个样本中需要参与计算的列。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 相似度：计算相似度的方式，包括余弦距离、欧式距离、绝对值距离。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回指定样本的相似度矩阵，保存在表格中。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 返回距离最近（相似度高）的10对样本，如下图，第一行表示索引为149的样本和索引为150的样本距离为1，选取的距离计算方式是余弦距离。 ")])),_:1}),(0,l.Wm)(m,{src:n.photo8_1,class:"images",style:{width:"500px",height:"350px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 通过计算样本间距离，确定在给定特征下样本的相似性。常用的计算方法包括余弦距离、欧式距离、绝对值距离等。现在假设有两个d维样本x和y。 ")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 余弦距离又被称作余弦相似度，是用向量空间中两个向量夹角的余弦值作为衡量两个个体间差异的大小的度量。取值范围是[-1,1], 取值越大，表明两个向量距离越近。计算公式如下： ")])),_:1}),(0,l.Wm)(m,{src:n.photo8_2,class:"images",style:{width:"200px",height:"50px"}},null,8,["src"]),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 欧式距离又被称为欧几里得距离，是欧几里得空间中两点间的即直线距离，取值非负。计算公式如下： ")])),_:1}),(0,l.Wm)(m,{src:n.photo8_3,class:"images",style:{width:"200px",height:"70px"}},null,8,["src"]),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 绝对值距离又被称作曼哈顿距离，是两个点在标准坐标系上分量绝对值之差的和，取值非负。计算公式如下： ")])),_:1}),(0,l.Wm)(m,{src:n.photo8_4,class:"images",style:{width:"200px",height:"68px"}},null,8,["src"])])),_:1})):(0,l.kq)("",!0),9==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:8,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("删除数据表格中的某列或某几列。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 需要删除的列：选择一个或多个希望删除的数据列对应的数据字段。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，输出删除数据列后的数据对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回删除数据列后的数据表，例如下面的例子：")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("原始数据：")])),_:1}),(0,l.Wm)(m,{src:n.photo1_2,class:"images",style:{width:"500px",height:"350px"}},null,8,["src"]),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回删除前三列后的结果：")])),_:1}),(0,l.Wm)(m,{src:n.photo9_2,class:"images",style:{width:"500px",height:"350px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("对于数据集中存在的冗余数据，可以通过删除的方式去掉这些冗余信息。")])),_:1})])),_:1})):(0,l.kq)("",!0),10==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:9,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("将数据集样本划分为训练集和测试集两部分。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 标签列：选取有监督数据集样本中的标签列，单选。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 测试集大小：输入测试集占数据样本总体的比例，范围为(0,1)，例如输入值为0.2，则表示测试集占数据样本总体的20%，训练集占80%，训练集与测试集的比例为4:1。 ")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 采样随机数：输入大于等于0的整数，相同的值可以保证每次划分的结果一致。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 是否分层抽样：选择是否进行分层抽样，默认为否。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 分层列：是否分层抽样选择是时弹出，选择按照哪一列进行分层抽样，一般选择标签列，在分类任务中，可以保证训练集和测试集中各类样本的比例一致。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：2个，左输出桩返回训练集数据对象，右输出桩返回测试集数据对象。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("输出划分后的训练集和测试集样本数量分布饼状图，如下图所示。")])),_:1}),(0,l.Wm)(m,{src:n.photo10,class:"images",style:{width:"500px",height:"350px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 在使用数据集训练模型之前，我们需要先将整个数据集分为训练集和测试集。训练集用来训练模型，通过尝试不同的方法和思路使用训练集来训练不同的模型，再利用评价指标通过测试集来评估模型的效果。 ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 一般情况下，训练集和测试集的比例为7:3。若数据量充足，则应该尽量加大测试集的占比，最好保证训练集和测试集的比例为1:1，以便更加充分地评估模型的效果。由于程序每次划分的结果都是随机的，通过设置相同的随机种子数，可以保证每次划分的结果都一样，以便在相同数据下比较不同模型的效果。 ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 在分类任务中，划分训练集和测试集一般采取分层抽样的方式，目的是尽量保证训练集、测试集与总体数据样本分布的一致性，减少因数据划分过程引入额外的偏差而对模型的性能产生影响。例如二分类任务中，总体样本中正负类样本数量比为1:3，则划分后训练集和测试集中正负样本数量比都为1:3。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),11==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:10,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("对离散型变量进行数字编码，例如性别（男，女）编码为（0，1）。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 编码列：选取需要进行数字编码的列，单选。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，输出进行数字编码后的数据对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回所选列进行数字编码后的结果以及所选列中的值对应的编码值。")])),_:1}),(0,l.Wm)(m,{src:n.photo11,class:"images",style:{width:"500px",height:"500px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 在实际问题中，获取的原始数据会包含非数值型特征，因此需要对其进行数字编码，使用数字对离散型的取值进行表示。 ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("数字编码方法是从0开始赋予特征的每一个取值一个整数。对于等级型特征，按照特征取值从小到大进行整数编码可以保证编码后的数据保留原有次序关系。例如对于特征 “收入水平”={贫困，低收入，小康，中等收入，富有}，可以将其数字编码后转换成”收入水平“= {0, 1, 2, 3, 4}。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),13==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:11,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("对数据集中某一列的类型进行转换。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 需要转换的列：选取要进行类型转换的列，单选")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 转换为：选取需要转换成的数据类型，包括整型（int32，int64）,浮点型（float32，float64），字符型（object），布尔型（bool）和datetime时间类型（datetime64）。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，输出将选择列进行转换后的数据对象，转换后的列名为原列名_trans。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告显示转换后的数据集的数据预览。")])),_:1}),(0,l.Wm)(m,{src:n.photo13,class:"images",style:{width:"500px",height:"400px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 当我们处理数据的时候，经常会遇到数据类型不匹配的问题。所以，在我们进行处理数据之前，首先要进行确定的便是数据的类型是正确的，如果不正确，就需要进行数据类型的转化。 ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 数据能转化的类型是Python数据处理包Pandas所能处理的数据类型来确定的，整数数据类型有int32和int64，浮点型数据有float32和float64，object类型代表字符串类型，bool为布尔值类型，datetime64为日期时间类型。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),14==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:12,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("对某些数据字段进行重命名操作。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 需要重命名的列：选择对哪些数据列进行重命名，单选。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回数据字段重命名后的数据对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回数据字段重命名后的数据对象。")])),_:1}),(0,l.Wm)(m,{src:n.photo14,class:"images",style:{width:"700px",height:"340px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 某些时候，原有的数据集的数据字段标签所代表的含义并不直观，或者在我们进行字符串分割等操作后衍生出了新的数据字段，为了便于我们识别这些字段，可以利用数据字段重命名组件把字段更改成我们想要的名字。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),15==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:13,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("对数据中某列进行加、减、乘、除、乘方、开方运算。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 计算列：选取需要进行计算的列，单选。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 计算类型：从加、减、乘、除、乘方、开方中选择一种计算方式。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 计算值：输入数值，可根据所选的计算类型进行相应的运算。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回添加计算结果列的数据对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 返回数据集并添加计算结果一列，如下图将SepalLength一列加5，结果自动添加为SepalLength_cal列。 ")])),_:1}),(0,l.Wm)(m,{src:n.photo15,class:"images",style:{width:"500px",height:"370px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("在部分数据分析的场景中，需要对数据列执行加减乘除等计算操作，辅助后续的分析工作。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),16==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:14,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("指定一个或多个字段，批量替换数据中的某些值为指定值。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 替换列：选择一个数据字段，以对其中的值进行批量替换。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 替换方式：可选择替换值的输入方式。可选单值替换或列表替换。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 被替换值：输入原数据中的一个或一组数据。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 替换值：输入相应的一个或一组替换后的数据。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回值替换后得到的数据对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回值替换后得到的数据对象。")])),_:1}),(0,l.Wm)(m,{src:n.photo16,class:"images",style:{width:"700px",height:"340px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 单值替换会将被替换值中的值替换为替换值。列表替换要求输入两个等长的列表，依次将被替换值中输入的列表中的值，替换为替换值中输入的列表中的值。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),17==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:15,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 对数据中某列的缺失值进行填补，可以对均值、中位数、众数进行填补或指定值进行填补。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 填补列：选择需要进行缺失值填补的数据列。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 缺失值：填写缺失值的形式，不填写则为空，系统自动处理为NaN。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 填补策略：可选择均值、中位数、众数或指定值对缺失值进行填补，请根据填补列的数据类型选择合适的填补策略。 ")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 填补值：填补策略选择指定值时弹出，输入指定值进行填补，注意保证输入值的数据类型和填补列的数据类型保持一致。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回填补后的数据对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回填补后的数据表格，直接在填补列的缺失值处进行填补，不创建新的数据列。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 数据缺失是指在数据收集、传输和处理等过程中，由于某些原因导致数据不完整的情况。缺失值的存在会给数据的统计带来问题。面对数据缺失的情况，有两类处理办法：删除法和填补法。 ")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 删除法通过删除包括缺失值的数据，来得到一个完整的数据子集，适用于缺失值占比较小的情况。填补法的思想是采用某种方法对缺失值进行填补。例如对于连续型特征，使用均值进行填补，对于离散型特征，使用众数进行填补。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),18==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:16,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("将数据集依照某列取值进行排序。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 排序列：选取按照哪一列对数据集进行排序，可扩展选择多列。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 是否降序排列：默认为否，按照升序排序，选择是，按照升序排序。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回排序后的数据对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回排序后的数据对象。")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("原数据，排序列为SepalLength：")])),_:1}),(0,l.Wm)(m,{src:n.photo18_1,class:"images",style:{width:"500px",height:"400px"}},null,8,["src"]),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("降序排列结果：")])),_:1}),(0,l.Wm)(m,{src:n.photo18_2,class:"images",style:{width:"500px",height:"350px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 数据排序是数据分析的一种常用方法，排序将一个“无序”的数据集调整为“有序”的数据集，得到最符合分析要求的结果，从排序后的数据集中也更易发现数据间的规律。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),19==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:17,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("OneHot编码将包含k个取值的离散型特征转换为k个二元特征。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 编码列：选择需要进行One-Hot编码的数据列。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 删除首个取值：是否删除转换后的第一个二元特征，默认为否；若选择是，假设原数据列有k个不同取值，OneHot编码后转换为k−1个二元特征列，也称为哑编码（dummy encoding）。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回转换后的数据对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(' 对编码后的数据进行预览，编码后的列位于最后。假设编码列为class，有3种取值分别为“Iris-setosa”，“Iris-versicolor”和"Iris-virginica"。原数据如下图所示： ')])),_:1}),(0,l.Wm)(m,{src:n.photo19_1,class:"images",style:{width:"500px",height:"120px","margin-bottom":"10px"}},null,8,["src"]),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("则不同情况下的节点报告如下所示：")])),_:1}),(0,l.Wm)(r,{class:"original_text",style:{"font-weight":"bold"}},{default:(0,l.w5)((()=>[(0,l.Uk)("（1）不删除首个取值：")])),_:1}),(0,l.Wm)(m,{src:n.photo19_2,class:"images",style:{width:"500px",height:"350px","margin-bottom":"10px"}},null,8,["src"]),(0,l.Wm)(r,{class:"original_text",style:{"font-weight":"bold"}},{default:(0,l.w5)((()=>[(0,l.Uk)("（2）删除首个取值：")])),_:1}),(0,l.Wm)(m,{src:n.photo19_3,class:"images",style:{width:"500px",height:"350px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" OneHot编码是将无序离散型特征转换为机器学习算法易于利用的一种形式的过程。将包含k个取值的无序离散型特征转换成k个二元特征（取值为0或1）。经过OneHot编码之后，不同的原始特征取值之间拥有相同的距离。 ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 但随着特征显著增多，会增加特征之间的相关性。哑编码将包含k个取值的离散型特征转换成k-1个二元特征（取值为0或1），解决了OneHot编码特征之间存在线性关系的问题，避免特征编码对线性回归等模型的影响。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),20==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:18,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("将原始数据进行Z-Score标准化变换，使变换后数据的均值为0，标准差为1。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 处理列：选择希望进行转换的数据列，可选多个。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，输出进行标准化之后的数据对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告展示两部分内容：一是标准化后的数据预览；二是原数据中各特征的均值和标准差。假设我们选择鸢尾花数据集 ，原数据预览如下图： ")])),_:1}),(0,l.Wm)(m,{src:n.photo20_1,class:"images",style:{width:"500px",height:"200px"}},null,8,["src"]),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("对四个数值特征进行Z-Score标准化，得到的节点报告如下：")])),_:1}),(0,l.Wm)(m,{src:n.photo20_2,class:"images",style:{width:"500px",height:"500px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("Z-Score标准化是最常用的标准化方法。 该方法通过对数据集中的每一个样本进行处理，使得处理后的数据具有固定均值和标准差。 ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 经过Z-score标准化后的特征能够直观反应每一个取值距离平均值的标准差距离，从而理解特征的整体分布情况。特征的均值落在0附近，而每一个样本离0的距离可解释为其值远离均值的标准差距离。 ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("Z-Score标准化适用于特征的最大值或最小值未知和样本分布非常分散的情况。")])),_:1})])),_:1})):(0,l.kq)("",!0),21==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:19,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("Min-Max标准化通过对特征作线性变换，使得转换后特征的取值分布在 [0,1]区间内。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 处理列：选取想要标准化的数据列，可选多个。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 最小值：输入进行Min-Max标准化的下限，默认为0。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 最大值：输入进行Min-Max标准化的上限，默认为1。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，输出进行标准化之后的数据对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 返回进行标准化之后的数据表，如下图，对SepalLength，SepalWidth，PetalLength和PetalWidth四列进行Min-Max标准化，将取值缩放到 [0,1] 之间。 ")])),_:1}),(0,l.Wm)(m,{src:n.photo21,class:"images",style:{width:"500px",height:"370px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("Min-Max标准化通过对特征作线性变换，使得转换后特征的取值分布在[0,1]区间内。 ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("Min-Max标准化适用于需要将特征取值简单地线性映射到某一区间中的情形。 其不足之处在于当数据集中有新数据加入时，特征的最大值或最小值会发生变化。 此时需要计算新的最小值和最大值，并将之前的数据重新进行标准化操作。 Min-Max标准化由于需要计算特征取值的最小值和最大值，因此当数据存在离群值时，标准化后的效果较差。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),22==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:20,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("Logistic标准化利用Logistic函数的特性，将特征取值映射到 (0,1) 区间内。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 处理列：选取想要标准化的数据列，可选多个。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，输出进行标准化之后的数据对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告展示标准化后的数据预览。假设我们选择 鸢尾花数据集 ，原数据预览如下图： ")])),_:1}),(0,l.Wm)(m,{src:n.photo22_1,class:"images",style:{width:"500px",height:"200px"}},null,8,["src"]),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("对四个数值特征进行Logistic标准化，得到的节点报告如下：")])),_:1}),(0,l.Wm)(m,{src:n.photo22_2,class:"images",style:{width:"500px",height:"370px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("Logistic函数是皮埃尔·弗朗索瓦·韦吕勒(Pierre François Verhulst)在研究人口增长时发明的。Logistic函数图像如下： ")])),_:1}),(0,l.Wm)(m,{src:n.photo22_3,class:"images",style:{width:"500px",height:"250px"}},null,8,["src"]),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("Logistic标准化方法适用于数据列取值分布相对比较集中的情况。如果数据列取值分散且均远离 0，那么标准化后的数据列取值会聚集于 0 或 1 附近, 造成原始数据列的分布及取值间关系被改变。因此在应用Logistic标准化方法之前，需要首先分析原始数据列取值的分布状况。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),23==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:21,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("使用最大绝对值方法对特征进行标准化变换。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 处理列：选取想要标准化的数据列，可选多个。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，输出进行标准化之后的数据对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回进行标准化之后的数据对象，并分析所选标签列的数据分布。假设我们选择 鸢尾花数据集 ，原数据预览如下图： ")])),_:1}),(0,l.Wm)(m,{src:n.photo23_1,class:"images",style:{width:"500px",height:"200px"}},null,8,["src"]),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("对四个数值特征进行最大绝对值标准化，得到的节点报告如下：")])),_:1}),(0,l.Wm)(m,{src:n.photo23_2,class:"images",style:{width:"500px",height:"370px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 最大绝对值标准化通过除以特征f每个取值最大绝对值从而把特征变换到闭区间[−1,1]中，不会平移整个分布，也不会破坏原来每一个特征向量的稀疏性。 ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 例如有特征取值为[−1000,100,10]，最大绝对值为1000，转换为[−1000/1000,100/1000,10/1000]=[−1,0.1,0.01]。如果最大绝对值是一个离群点，显然这种处理方式是很不合理的。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),24==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:22,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("根据连续型数据的取值，将其均匀地划分为若干区间，每个区间的宽度相等。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 处理列：可选参数，选择需要进行等距离散化的数据列。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 分段数：输入参数，将数据列分为几组。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，输出离散化后的数据对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 直接在处理列上进行离散化，不创建新的数据列，每一组分配一个标签，属于这组的数据直接由标签进行替换，返回离散化后的数据表格对象以及每组分配标签的对照表。 ")])),_:1}),(0,l.Wm)(m,{src:n.photo24,class:"images",style:{width:"500px",height:"500px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 等距离散化是最早的数据离散化方法之一，它根据连续型数据的取值，将其均匀地划分为k个区间，每个区间的宽度均相等，然后将数据的取值划入对应的区间从而完成数据离散化。用f表示需要进行离散化的连续型数据，通过数据的最大值和最小值计算出区间段的宽度。 ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 根据区间宽度，以及数据的最大值、最小值，可以找到k−1个切分点，从而完成数据离散化的过程。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),25==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:23,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("将原始数据进行等频离散化处理。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 处理列：可选参数，选取想要转化的数据列。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，输出离散化后的数据对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回进行离散化之后的数据对象以及分组区间与标签的对照表。")])),_:1}),(0,l.Wm)(m,{src:n.photo25,class:"images",style:{width:"500px",height:"500px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 在数据清洗和预处理过程中，有时我们需要适当地对数据集进行离散化处理。等频离散化是将相同数量的记录放在每个区间，保证每个区间的数量基本一致。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),26==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:24,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 应用KMeans聚类方法对数据列的取值进行聚类，根据聚类结果对数据列进行离散化。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 处理列：可选参数，选取想要转化的数据列。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 分段数：输入参数，输入需要划分的区间段的数量。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，输出离散化后的数据对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回离散化后的数据对象及所选列划分的区间段和对应的区间取值。")])),_:1}),(0,l.Wm)(m,{src:n.photo26,class:"images",style:{width:"500px",height:"500px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" KMeans离散化是基于聚类的离散化，属于无监督离散化方法。在离散化连续型数据的时候，如果相似的样本都能落在相同的区间段内，那么这样的划分可以更好地代表原始数据的信息。 而聚类正是将样本划分到不同的类或者簇的一个过程。聚类的结果是同一个簇中的样本有很大的相似性，不同簇间的样本则有很大的差异性。如何选定簇的个数也会影响聚类算法的效果，从而影响数据的离散化。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),27==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:25,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 卡方离散化是一种有监督的离散化方法，递归式地将卡方值最小的相邻区间进行合并。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 处理列：可选参数，选取想要转化的数据列。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 标签列：用于计算卡方值的标签（为离散型变量），单选。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 最大分箱数：默认为10。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，输出离散化后的数据对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 第一个表格为已进行卡方离散化的数据对象，第二个表格为分箱时的区间及对应的区间取值。 ")])),_:1}),(0,l.Wm)(m,{src:n.photo27,class:"images",style:{width:"500px",height:"500px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 基于卡方独立性检验，计算处理列和标签列的频数列联表。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 初始时，将处理列的取值作为分箱边界，计算所有相邻分箱的卡方值，卡方值小说明两分箱内的数据分布相似。 ")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 递归地合并卡方值最小的一对相邻区间，直到区间数小于最大分箱数或卡方值小于给定阈值（置信度为95%对应的卡方拟合优度临界值）。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),28==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:26,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("本组件基于决策树模型进行离散化，是一种有监督的离散化方法。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 处理列：可选参数，选取想要转化的数据列。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 标签列：用于计算卡方值的标签（为离散型变量），单选。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 最大分箱数：默认为10。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 模型类型：若标签列为定类变量，应选择“分类”，调用分类决策树；若标签列为连续变量，应选择“回归”，调用回归决策树。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，输出离散化后的数据对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 第一个表格为已进行决策树离散化的数据对象，第二个表格为分箱时的区间及对应的区间取值。 ")])),_:1}),(0,l.Wm)(m,{src:n.photo28,class:"images",style:{width:"500px",height:"500px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 决策树离散化通过特征的分裂来创建箱或区间，是一种有监督离散化方法。基本思想是使用决策树来确定箱子或连续间隔的最佳分裂点。 ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 首先根据需要离散化的列训练一个有限深度的决策树来预测标签列。随后将原始变量值替换为树返回的概率。每个箱内的所有观测值的概率相同，因此用概率替换相当于将决策树决定的截止值内的观测值分组。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),29==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:27,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("利用主成分分析法对数据进行降维。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 特征列：选取要进行降维处理的特征，至少选择2个。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 维数：降维之后的保留主成分的个数，注意，保留主成分的个数需要小于等于选择的特征列的数量。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回主成分分析降维之后的数据对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回降维处理后的结果、主成分得分矩阵以及解释方差比的柱形图。")])),_:1}),(0,l.Wm)(m,{src:n.photo29_1_1,class:"images",style:{width:"500px",height:"500px","margin-bottom":"0px"}},null,8,["src"]),(0,l.Wm)(m,{src:n.photo29_1_2,class:"images",style:{width:"500px",height:"350px","margin-top":"0px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("主成分分析(Principal Component Analysis，PCA)是由著名统计学家卡尔·皮尔逊(Karl Pearson)于1901年提出的线性降维方法。 它在人脸识别、图像压缩等领域得到了广泛的应用。 在主成分分析中，信息的重要性是通过方差来表示的。 因而它的基本思想是：构造原始特征的一系列线性组合形成低维的特征，以去除数据的相关性，并使降维后的数据最大程度地保持原始高维数据的方差信息。 ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("我们首先通过一个简单的例子来理解PCA的思想。 假设原始数据集包含两个特征x1和x2，原始数据集的散点图如图所示。 ")])),_:1}),(0,l.Wm)(m,{src:n.photo29_2,class:"images",style:{width:"500px",height:"400px","margin-bottom":"10px"}},null,8,["src"]),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("现在，我们需要将数据降低到一维，即找到一个方向，使得在该方向上原始数据经过投影后的方差最大。 直观来看，图中直线的方向就是我们需要的方向。 这是PCA的第一种表达方式，即降维后数据的方差最大。 ")])),_:1}),(0,l.Wm)(m,{src:n.photo29_3,style:{width:"800px",height:"600px","margin-left":"30px"}},null,8,["src"])])),_:1})):(0,l.kq)("",!0),30==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:28,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("线性判别分析（Linear Discriminant Analysis, LDA）是一种经典的有监督线性降维方法。基本思想是利用样本的类别信息，找到数据的线性低维表示，使得低维数据表示更有利于对数据进行分类。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 特征列：选取要进行降维处理的特征。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 目标列：可选参数，选择表示样本类别信息的标签列。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 维数：输入参数，指定希望降维后的特征维度数目。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，输出降维后的数据对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回降维后的数据对象，及降维后主成分的方差贡献率图。")])),_:1}),(0,l.Wm)(m,{src:n.photo30_1,class:"images",style:{width:"500px",height:"380px","margin-bottom":"0px"}},null,8,["src"]),(0,l.Wm)(m,{src:n.photo30_2,class:"images",style:{width:"500px",height:"320px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● LDA利用样本的类别信息，找到数据的线性低维表示，使得低维表示最有利于数据进行分类。这个目标可以从两个角度来量化。第一个角度是使得降维后相同类样本尽可能近。这可以使用类内样本的方差来定量表示，也称为类内离散度。第二个角度是使得降维后不同类样本尽可能远，这可以使用不同类样本的均值的方差定量表示，也称为类间离散度。 ")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 线性判别分析是一种有监督的线性降维方法。它既能作为一种降维方法，也能作为一种分类算法。LDA能够找到最有利于对数据分类的特征，因此也可以作为分类问题的特征选择方法。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),31==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:29,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("对数据进行线性回归建模。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 特征列：可选参数，选取有监督数据集样本中的特征列，可选多个。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 标签列：可选参数，选取有监督数据集样本中的标签列。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 训练截距项：可选参数，默认为是，是否计算此模型的截距。如果设置为否，则在计算中不使用任何截距（即数据已经中心化）。 ")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 数据归一化：可选参数，默认为否，是否将选取的特征列进行归一化。当训练截距项设置为否时，该参数将被忽略。如果为是，则回归因子X将在回归之前归一化。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回建模后的模型对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回线性回归建模后的模型的参数。")])),_:1}),(0,l.Wm)(m,{src:n.photo31_1,class:"images",style:{width:"500px",height:"220px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(m,{src:n.photo31_2,style:{width:"800px",height:"360px","margin-left":"30px"}},null,8,["src"])])),_:1})):(0,l.kq)("",!0),32==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:30,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)(" L1正则化的线性回归模型，能得到稀疏的回归系数。它在某些情况下很有用，因为它倾向于选择非零系数较少的解，有效地减少了给定解所依赖的特征数。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 特征列：可选参数，选取有监督数据集样本中的特征列，可选多个。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 标签列：可选参数，选取有监督数据集样本中的标签列。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 正则系数：输入参数，初始值为1，数值越大则对复杂模型的惩罚力度越大。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 训练截距项：可选参数，默认为是，是否计算此模型的截距。如果设置为否，则在计算中不使用任何截距（即数据已经中心化）。 ")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 数据归一化：可选参数，默认为否，是否将选取的特征列进行归一化。当训练截距项设置为否时，该参数将被忽略。如果为是，则回归因子X将在回归之前归一化。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回建模后的模型对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回各特征的系数，及模型学习到的截距。")])),_:1}),(0,l.Wm)(m,{src:n.photo32_1,class:"images",style:{width:"500px",height:"220px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("LASSO (Least Absolute Shrinkage and Selection Operator)是一种线性回归正则化方法。正则化是一种通过在模型中添加一些惩罚项或约束条件来控制模型复杂度，来减轻过度拟合的方法。LASSO 的解没有解析表达式，但能得到稀疏的回归系数，即很多分量非常接近 0。因此，LASSO模型得到的结果可以帮助我们做特征选择。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),33==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:31,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("对数据进行岭回归建模。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 特征列：可选参数，选取有监督数据集样本中的特征列，可选多个。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 标签列：可选参数，选取有监督数据集样本中的标签列。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 正则系数：输入参数，初始值为1，数值越大则对复杂模型的惩罚力度越大。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 训练截距项：可选参数，默认为是，是否计算此模型的截距。如果设置为否，则在计算中不使用任何截距（即数据已经中心化）。 ")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 数据归一化：可选参数，默认为否，是否将选取的特征列进行归一化。当训练截距项设置为否时，该参数将被忽略。如果为是，则回归因子X将在回归之前归一化。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回建模后的模型对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回各特征的系数，及模型学习到的截距。")])),_:1}),(0,l.Wm)(m,{src:n.photo33_1,class:"images",style:{width:"500px",height:"220px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(m,{src:n.photo33_2,style:{width:"800px",height:"300px","margin-left":"30px"}},null,8,["src"])])),_:1})):(0,l.kq)("",!0),34==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:32,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 同时使用l1正则化和l2正则化的线性回归模型。既有Lasso的稀疏性，也保留了岭回归的稳定性。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 特征列：可选参数，选取有监督数据集样本中的特征列，可选多个。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 标签列：可选参数，选取有监督数据集样本中的标签列。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● l1正则系数：输入l1正则化系数，初始值为0.5，数值越大则对模型的正则化力度越大。 ")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● l2正则系数：输入l2正则化系数，初始值为0.5，数值越大则对模型的正则化力度越大。 ")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 训练截距项：可选参数，默认为是，是否计算此模型的截距。如果设置为否，则在计算中不使用任何截距（即数据已经中心化） ")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 数据归一化：可选参数，默认为否，是否将选取的特征列进行归一化。当训练截距项设置为否时，该参数将被忽略。如果为是，则回归因子X将在回归之前归一化。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回建模后的模型对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回各特征的系数，及模型学习到的截距。")])),_:1}),(0,l.Wm)(m,{src:n.photo34_1,class:"images",style:{width:"500px",height:"220px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("弹性网络（Elastic Net）综合了岭回归和LASSO的正则化方式，呈现出一个特征分组的效果。即高度相关的特征对应的回归系数倾向于相等 (对于负相关的特征，系数有符号差别)。它克服了LASSO在这方面的缺点，在微阵列分类和基因选择中得到了成功的应用。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),35==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:33,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("对数据进行K近邻回归建模。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 特征列：可选参数，选取有监督数据集样本中的特征列，可选多个。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 标签列：可选参数，选取有监督数据集样本中的标签列。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 邻居个数：输入参数，默认为1，为正则化项前的系数，需大于零。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 权重计算方式：可选参数，默认为uniform，指定权重计算的方式。uniform为统一权重，每个邻域中的所有点的权重相等；distance依据点间距离的倒数计算权重，点的较近邻居将比较远的邻居具有更大的影响。 ")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 距离计算方式：距离度量的计算方法，默认为 euclidean 距离（欧氏距离）。可选的计算方式还有 manhattan 距离、minkowski 距离和 chebyshev 距离，并且选择 minkowski 距离时可选择幂的大小。 ")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 幂（p）：minkowski 度量的幂参数，默认为2。当 p = 1 时，等价于使用 manhattan 距离，p = 2 时使用 euclidean 距离。对于任意 p，使用 minkowski 距离的p次幂。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回建模后的模型对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回K近邻回归建模后的模型的参数。")])),_:1}),(0,l.Wm)(m,{src:n.photo35_1,class:"images",style:{width:"500px",height:"220px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("K近邻（K-Nearest Neighbor, KNN）算法是一种简单且有效的有监督学习方法，当对数据的分布只有很少或者没有任何先验知识时，K近邻算法是一个不错的选择。 ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" K近邻算法的基本原理为：当对测试样本进行回归时，首先扫描训练集，找到与该测试样本最相似的k个训练样本，根据这k个样本的类别进行计算确定测试样本的回归值。 ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("K近邻回归算法的具体步骤如下：")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("1. 确定K的大小和距离计算的方法；")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("2. 从训练样本中得到K个与测试样本最相似的样本；")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("3. 根据K个最相似训练样本的目标值，通过计算这些样本的平均目标值确定测试样本的目标值。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),36==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:34,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("使用CART算法，训练回归决策树模型。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 特征列：可选参数，选取有监督数据集样本中的特征列，可选多个。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 标签列：可选参数，选取有监督数据集样本中的标签列。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 最大树深度：输入参数，设定决策树的最大深度。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 节点分裂最小样本数：输入参数，一个节点在分枝后的每个子节点都必须包含的最小样本数量。 ")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 叶节点最小样本数：输入参数，一个节点必须包含的最小样本数量。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回建模后的模型对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回各个特征对模型重要性的条形图。")])),_:1}),(0,l.Wm)(m,{src:n.photo36_1,class:"images",style:{width:"500px",height:"350px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 决策树是通过一系列问题的诊断结果来进行决策的。决策树的生成一般是从根节点开始，选择对应特征；然后选择该节点特征的分裂点，根据分裂点分裂节点。对于离散型特征，节点根据特征取值进行分裂；如根节点特征为“收入”，则根据其取值“高“、”中等“和”低“根节点分裂成三个子节点。对于连续型特征，则需要根据具体特征值(分裂点)来分裂子节点。一般而言，当某一个节点中数据只属于某类别(分类问题) 或者方差较小(回归问题) 时，节点则不再分裂。 ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 决策树生成的核心问题为：如何选择节点特征和特征分裂点。决策树分裂节点的目标是使得节点分裂前后，样本的类别分布更加不均衡，也就是不纯度需要降低。因此我们选择使得节点分裂前后，不纯度下降最大的特征和分裂点。不纯度用来表示落在当前节点的样本的类别分布的均衡程度。 ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 决策树算法有可能会产生过于复杂的树(例如树的层数太多、树的节点数过多等)，从而使得学习到的决策树模型在测试集上的效果不理想，即容易产生过拟合问题。如果我们学习到了过于复杂的树，可以通过剪枝(pruning) 策略来对树的复杂性进行控制。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),37==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:35,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("对数据进行朴素贝叶斯分类建模。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 贝叶斯分类器：选择要使用的贝叶斯分类模型，默认为BernoulliNB。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 平滑参数：输入参数，设置平滑项，默认为1.0。当贝叶斯分类器选择BernoulliNB、MultinomialNB和CategoricalNB时可进行设置。附加平滑参数，设置为0时不平滑，为1时为拉普拉斯平滑。 ")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 学习先验概率：选择是否进行先验概率的学习，默认为是。当贝叶斯分类器选择BernoulliNB、MultinomialNB和CategoricalNB时可进行设置。 如果选择否，将使用统一先验概率。 ")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 二值化阈值：输入参数，设置样本特征二值化（映射到布尔值）的阈值，默认为1.0。当贝叶斯分类器选择BernoulliNB时可进行设置。如果没有，则假定输入已经由二进制向量组成。 ")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 最小类别数：输入参数，设置每个特征的最小类别数，默认为1。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回朴素贝叶斯建模之后的模型对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回朴素贝叶斯建模后的模型的参数。")])),_:1}),(0,l.Wm)(m,{src:n.photo36_1,class:"images",style:{width:"500px",height:"350px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(m,{src:n.photo37_2,style:{width:"800px",height:"400px","margin-left":"30px"}},null,8,["src"])])),_:1})):(0,l.kq)("",!0),38==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:36,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("使用数据集训练线性SVC模型。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 特征列：可选参数，选取数据集样本中的特征列，可选多个。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 标签列：可选参数，选取数据集样本中的标签列。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 正则化系数：输入参数，默认为1，为正则化项前的系数，需大于零。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 最小收敛数：输入参数，默认为0.0001，指定终止迭代的阈值。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 最大迭代数：输入参数，默认为1000，指定要运行的最大迭代次数。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 训练截距项：可选参数，默认为是，是否计算此模型的截距。如果设置为否，则在计算中不使用任何截距（即数据已经中心化）。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回建模后的模型对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回线性SVC建模所得到的模型的参数。")])),_:1}),(0,l.Wm)(m,{src:n.photo38_1,class:"images",style:{width:"500px",height:"300px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(m,{src:n.photo38_2,style:{width:"800px",height:"450px","margin-left":"30px"}},null,8,["src"])])),_:1})):(0,l.kq)("",!0),39==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:37,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)(" SVM学习的基本想法是求解能够正确划分训练数据集并且几何间隔最大的分离超平面。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 特征列：输入支持向量机的特征（自变量X），多选。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 标签列：支持向量机需要学习的标签，因变量y。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 训练错误率上限：为0-1之前的浮点数，默认值为0.5。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 核函数：支持向量机所使用的核函数类型，分为poly、sigmoid、rbf三种。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● gamma：核函数的系数。若为scale，取值为1/(特征树✖X的方差)，若为auto，取值为1/特征数 ")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● degree（仅适用于poly核函数）：多项式度数，默认为3。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● coef0（适用于sigmoid和poly核函数）：核函数中的独立项，默认为0。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 类别权重：若为None，对所有类别的权重相同；若为Balanced, 按照类别样本个数进行加权。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回支持向量机模型。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回各类别的支持向量个数和截距。")])),_:1}),(0,l.Wm)(m,{src:n.photo39_1,class:"images",style:{width:"500px",height:"250px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(m,{src:n.photo39_2,style:{width:"770px",height:"170px","margin-left":"60px"}},null,8,["src"])])),_:1})):(0,l.kq)("",!0),40==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:38,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("使用CART算法，训练分类决策树模型。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 特征列：可选参数，选取有监督数据集样本中的特征列，可选多个。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 标签列：可选参数，选取有监督数据集样本中的标签列。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 最大树深度：输入参数，设定决策树的最大深度。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 节点分裂最小样本数：输入参数，一个节点在分枝后的每个子节点都必须包含的最小样本数量。 ")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 叶节点最小样本数：输入参数，一个节点必须包含的最小样本数量。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回建模后的模型对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回各个特征对模型重要性的条形图。")])),_:1}),(0,l.Wm)(m,{src:n.photo40_1,class:"images",style:{width:"500px",height:"350px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 决策树是通过一系列问题的诊断结果来进行决策的。决策树的生成一般是从根节点开始，选择对应特征；然后选择该节点特征的分裂点，根据分裂点分裂节点。对于离散型特征，节点根据特征取值进行分裂；如根节点特征为“收入”，则根据其取值“高“、”中等“和”低“根节点分裂成三个子节点。对于连续型特征，则需要根据具体特征值(分裂点)来分裂子节点。一般而言，当某一个节点中数据只属于某类别(分类问题) 或者方差较小(回归问题) 时，节点则不再分裂。 ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 决策树生成的核心问题为：如何选择节点特征和特征分裂点。决策树分裂节点的目标是使得节点分裂前后，样本的类别分布更加不均衡，也就是不纯度需要降低。因此我们选择使得节点分裂前后，不纯度下降最大的特征和分裂点。不纯度用来表示落在当前节点的样本的类别分布的均衡程度。 ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" 决策树算法有可能会产生过于复杂的树(例如树的层数太多、树的节点数过多等)，从而使得学习到的决策树模型在测试集上的效果不理想，即容易产生过拟合问题。如果我们学习到了过于复杂的树，可以通过剪枝(pruning) 策略来对树的复杂性进行控制。 ")])),_:1})])),_:1})):(0,l.kq)("",!0),41==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:39,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("对数据进行逻辑回归建模。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 特征列：可选参数，选取有监督数据集样本中的特征列，可选多个。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 标签列：可选参数，选取有监督数据集样本中的标签列。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● C系数：输入参数，默认为1.0，为正则化系数λ的倒数，C越小，正则化能力越强。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 收敛系数：输入参数，默认为0.0001，指定终止迭代的阈值。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 随机种子：输入参数，默认为10，产生随机数的种子，即该组随机数的编号，在重复试验时保证随机数一致。 ")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 类别权重：可选参数，用于标示分类模型中各种类型的权重，通常用于在误分类代价很高或类别不平衡的情况下。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回逻辑回归建模之后的模型对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回逻辑回归建模后的模型的参数。")])),_:1}),(0,l.Wm)(m,{src:n.photo41_1,class:"images",style:{width:"500px",height:"220px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(m,{src:n.photo41_2,style:{width:"800px",height:"300px","margin-left":"30px"}},null,8,["src"])])),_:1})):(0,l.kq)("",!0),42==n.pageId?((0,l.wg)(),(0,l.j4)(p,{key:40,direction:"vertical",style:{float:"left","align-items":"flex-start"}},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("概述")])),_:1}),(0,l.Wm)(r,{class:"original_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("对数据进行K近邻分类建模。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("面板参数说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 特征列：可选参数，选取有监督数据集样本中的特征列，可选多个。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 标签列：可选参数，选取有监督数据集样本中的标签列。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 邻居个数：输入参数，默认为1，为正则化项前的系数，需大于零。")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 权重计算方式：可选参数，默认为uniform，指定权重计算的方式。uniform为统一权重，每个邻域中的所有点的权重相等；distance依据点间距离的倒数计算权重，点的较近邻居将比较远的邻居具有更大的影响。 ")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 距离计算方式：距离度量的计算方法，默认为 euclidean 距离（欧氏距离）。可选的计算方式还有 manhattan 距离、minkowski 距离和 chebyshev 距离，并且选择 minkowski 距离时可选择幂的大小。 ")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 幂（p）：minkowski 度量的幂参数，默认为2。当 p = 1 时，等价于使用 manhattan 距离，p = 2 时使用 euclidean 距离。对于任意 p，使用 minkowski 距离的p次幂。 ")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("输入输出桩说明")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输入桩：1个，连接数据对象。")])),_:1}),(0,l.Wm)(r,{class:"right_text_bottom"},{default:(0,l.w5)((()=>[(0,l.Uk)("● 输出桩：1个，返回K近邻分类建模之后的模型对象。")])),_:1}),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("节点报告说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("返回K近邻分类建模后的模型的参数。")])),_:1}),(0,l.Wm)(m,{src:n.photo42_1,class:"images",style:{width:"500px",height:"220px"}},null,8,["src"]),(0,l.Wm)(r,{class:"sub_head"},{default:(0,l.w5)((()=>[(0,l.Uk)("原理说明")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("K近邻（K-Nearest Neighbor, KNN）算法是一种简单且有效的有监督学习方法，当对数据的分布只有很少或者没有任何先验知识时，K近邻算法是一个不错的选择。 ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)(" K近邻算法的基本原理为：当对测试样本进行分类时，首先扫描训练集，找到与该测试样本最相似的k个训练样本，根据这k个样本的类别进行投票确定测试样本的类别。 ")])),_:1}),(0,l.Wm)(r,{class:"original_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("K近邻分类算法的具体步骤如下：")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("1. 确定K的大小和距离计算的方法；")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("2. 从训练样本中得到K个与测试样本最相似的样本；")])),_:1}),(0,l.Wm)(r,{class:"right_text"},{default:(0,l.w5)((()=>[(0,l.Uk)("3. 根据K个最相似训练样本的类别，通过投票的方式来确定测试样本的类别。")])),_:1})])),_:1})):(0,l.kq)("",!0)])),_:1})])),_:1})])),_:1})])),_:1})}var Wt=a.p+"static/img/1_1.2379c1ea.png",xt=a.p+"static/img/1_2.4fc5abdd.png",Nt=a.p+"static/img/2.0d5feb11.png",Ut=a.p+"static/img/3.e382961c.png",vt=a.p+"static/img/4.d74fc6df.png",jt=a.p+"static/img/4_2.f65fde8a.png",Ot=a.p+"static/img/4_3.8de7ac2f.png",qt=a.p+"static/img/4_4.d081a7b9.png",Tt=a.p+"static/img/5.a795173e.png",Kt=a.p+"static/img/6.3407b451.png",St=a.p+"static/img/7.002f711e.png",Pt=a.p+"static/img/8_1.41163073.png",It=a.p+"static/img/8_2.bc625128.png",zt=a.p+"static/img/8_3.342224ff.png",Zt=a.p+"static/img/8_4.34bd08cf.png",At=a.p+"static/img/9_2.a134fee7.png",Mt=a.p+"static/img/10.0e8c57ec.png",Lt=a.p+"static/img/11.e3053001.png",Ht=a.p+"static/img/13.40a81561.png",Bt=a.p+"static/img/14.76058269.png",Vt=a.p+"static/img/15.231d2368.png",Et=a.p+"static/img/16.2f10b5cf.png",Rt=a.p+"static/img/18_1.df06762c.png",Yt=a.p+"static/img/18_2.9f53b774.png",Ft=a.p+"static/img/19_1.e71b210b.png",$t=a.p+"static/img/19_2.390d7421.png",Qt=a.p+"static/img/19_3.46c0080e.png",Gt=a.p+"static/img/20_1.630d699b.png",Jt=a.p+"static/img/20_2.c416906d.png",Xt=a.p+"static/img/21.b2ddeef6.png",te=a.p+"static/img/22_1.630d699b.png",ee=a.p+"static/img/22_2.df6bde38.png",ae=a.p+"static/img/22_3.0ba786bd.png",oe=a.p+"static/img/23_1.630d699b.png",le=a.p+"static/img/23_2.5ca3241f.png",se=a.p+"static/img/24.bd649e6d.png",ne=a.p+"static/img/25.837d2cdd.png",ie=a.p+"static/img/26.1b8b028f.png",de=a.p+"static/img/27.67fc1d15.png",ce=a.p+"static/img/28.e5f190ca.png",ue=a.p+"static/img/29_1_1.a5691400.png",ge=a.p+"static/img/29_1_2.4ee1368d.png",he=a.p+"static/img/29_2.90699dcd.png",re=a.p+"static/img/29_3.6b344c27.png",me=a.p+"static/img/30_1.eac0d280.png",pe=a.p+"static/img/30_2.2a4609cc.png",fe=a.p+"static/img/31_1.da8ee896.png",_e=a.p+"static/img/31_2.5bcf8587.png",ke=a.p+"static/img/32_1.8cd9d1a6.png",we=a.p+"static/img/33_1.c2ff7a0f.png",De=a.p+"static/img/33_2.f2cccbd3.png",Ce=a.p+"static/img/34_1.3b1d060f.png",be=a.p+"static/img/35_1.95e486e4.png",ye=a.p+"static/img/36_1.7132fc03.png",We=a.p+"static/img/37_1.338628cc.png",xe=a.p+"static/img/37_2.f5724c6d.png",Ne=a.p+"static/img/38_1.4a64b6f9.png",Ue=a.p+"static/img/38_2.a7c84a66.png",ve=a.p+"static/img/39_1.d55a0f06.png",je=a.p+"static/img/39_2.889c3274.png",Oe=a.p+"static/img/40_1.67b2b773.png",qe=a.p+"static/img/41_1.9a80bc69.png",Te=a.p+"static/img/41_2.182c74ec.png",Ke=a.p+"static/img/42_1.899c112d.png",Se={name:"Introduction",components:{UserOutlined:u.Z,LaptopOutlined:g.Z,NotificationOutlined:h.Z},setup(){console.log(window.innerWidth)},data(){return{pageId:0,menuWidth:window.innerWidth/6+"px",id_to_name:{1:"读数据表",2:"字段基本统计信息",3:"查看唯一值及数量",4:"数据相关性",5:"缺失值检测",6:"单变量异常值检测",7:"重复值检测",8:"样本相似度计算",9:"列删除",10:"训练/测试集划分",11:"数字编码",12:"人工数字编码",13:"类型转换",14:"列重命名",15:"数据列计算",16:"数据值替换",17:"缺失值填补",18:"数据按列值排序",19:"OneHot编码",20:"Z-Score标准化",21:"Min-Max标准化",22:"Logistic标准化",23:"最大绝对值标准化",24:"等距离散化",25:"等频离散化",26:"Kmeans离散化",27:"卡方离散化",28:"决策树离散化",29:"主成分分析",30:"线性判别分析",31:"线性回归",32:"LASSO",33:"岭回归",34:"弹性网络",35:"K近邻回归",36:"回归决策树",37:"朴素贝叶斯",38:"线性SVC",39:"支持向量机",40:"分类决策树",41:"逻辑回归",42:"K近邻"},photo1_1:Wt,photo1_2:xt,photo2:Nt,photo3:Ut,photo4:vt,photo4_2:jt,photo4_3:Ot,photo4_4:qt,photo5:Tt,photo6:Kt,photo7:St,photo8_1:Pt,photo8_2:It,photo8_3:zt,photo8_4:Zt,photo9_2:At,photo10:Mt,photo11:Lt,photo13:Ht,photo14:Bt,photo15:Vt,photo16:Et,photo18_1:Rt,photo18_2:Yt,photo19_1:Ft,photo19_2:$t,photo19_3:Qt,photo20_1:Gt,photo20_2:Jt,photo21:Xt,photo22_1:te,photo22_2:ee,photo22_3:ae,photo23_1:oe,photo23_2:le,photo24:se,photo25:ne,photo26:ie,photo27:de,photo28:ce,photo29_1_1:ue,photo29_1_2:ge,photo29_2:he,photo29_3:re,photo30_1:me,photo30_2:pe,photo31_1:fe,photo31_2:_e,photo32_1:ke,photo33_1:we,photo33_2:De,photo34_1:Ce,photo35_1:be,photo36_1:ye,photo37_1:We,photo37_2:xe,photo38_1:Ne,photo38_2:Ue,photo39_1:ve,photo39_2:je,photo40_1:Oe,photo41_1:qe,photo41_2:Te,photo42_1:Ke}},methods:{changePage(t){this.pageId=t}}};const Pe=(0,k.Z)(Se,[["render",yt],["__scopeId","data-v-78fe643a"]]);var Ie=Pe;const ze={style:{display:"flex"}},Ze={style:{width:"300px"}},Ae={key:0,style:{width:"650px"}};function Me(t,e,a,o,s,n){const i=(0,l.up)("a-button"),d=(0,l.up)("a-table"),c=(0,l.up)("el-text"),u=(0,l.up)("el-table-column"),g=(0,l.up)("el-table"),h=(0,l.up)("a-modal");return(0,l.wg)(),(0,l.iD)(l.HY,null,[(0,l.Wm)(i,{onClick:t.showModal},{default:(0,l.w5)((()=>[(0,l.Uk)("aaaaaa")])),_:1},8,["onClick"]),(0,l.Wm)(h,{visible:t.visible,"onUpdate:visible":e[0]||(e[0]=e=>t.visible=e),width:"1000px",title:"选取数据集",onOk:t.handleOk},{default:(0,l.w5)((()=>[(0,l._)("div",ze,[(0,l._)("div",Ze,[(0,l.Wm)(d,{columns:t.columns,dataSource:t.tableData,pagination:!1,"row-selection":{selectedRowKeys:t.selectedRowKeys,onChange:t.onSelectChange,type:"radio"},"show-header":!1},null,8,["columns","dataSource","row-selection"])]),t.showData?((0,l.wg)(),(0,l.iD)("div",Ae,[(0,l.Wm)(c,{style:{"font-size":"larger","font-weight":"bold","margin-left":"20px"}},{default:(0,l.w5)((()=>[(0,l.Uk)((0,W.zw)(t.selectedRowName),1)])),_:1}),(0,l.Wm)(g,{data:t.data.dataBase.slice(0,20),style:{"margin-left":"20px","margin-top":"30px"},"max-height":"600px","header-cell-style":{background:"#edf6ff",color:"#606266"},"empty-text":"暂无数据"},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(t.data.dataColumns,((t,e)=>((0,l.wg)(),(0,l.j4)(u,{key:e,property:t,label:t},null,8,["property","label"])))),128))])),_:1},8,["data"])])):(0,l.kq)("",!0)])])),_:1},8,["visible","onOk"])],64)}var Le=(0,l.aZ)({name:"testModal",data(){return{selectedRows:[],selectedRowKeys:[],selectedRowName:null,data:(0,r.qj)({dataBase:[],dataColumns:[]}),showData:!1}},setup(){let t=(0,r.iH)(!1);const e=()=>{t.value=!0},a=()=>{t.value=!1},o=[{key:1,dataName:"鸢尾花数据集",dataId:2},{key:2,dataName:"信贷数据集",dataId:3}],l=[{title:"dataName",dataIndex:"dataName"}];return{visible:t,showModal:e,handleOk:a,tableData:o,columns:l}},methods:{onSelectChange(t,e){this.selectedRowKeys=t,this.selectedRows=e,this.selectedRowName=e[0].dataName,tt.Z.get("http://127.0.0.1:8000/api/show_yuanweihua").then((t=>{if(console.log(t),"OK"===t.statusText){const e=[];t.data.list.forEach((t=>{e.push(t.fields)})),this.data.dataBase=e,this.data.dataColumns=Object.keys(e[0]),this.showData=!0}}))}}});const He=(0,k.Z)(Le,[["render",Me]]);var Be=He;const Ve={class:"login-container"},Ee=(0,l._)("h2",{class:"login-title"},"金融数据挖掘与风险管理网站",-1),Re={class:"login-form"},Ye=(0,l._)("h2",{class:"title",style:{"margin-bottom":"20px",color:"#000000"}},"用户登陆",-1),Fe={class:"log-form"},$e=(0,l._)("h2",{class:"title",style:{"margin-bottom":"20px",color:"#000000"}},"用户注册",-1);function Qe(t,e,a,s,n,i){const d=(0,l.up)("a-input"),c=(0,l.up)("a-form-item"),u=(0,l.up)("a-input-password"),g=(0,l.up)("a-button"),h=(0,l.up)("a-form");return(0,l.wg)(),(0,l.iD)("div",Ve,[Ee,(0,l.wy)((0,l._)("div",Re,[(0,l.Wm)(h,{ref:"form",model:s.form},{default:(0,l.w5)((()=>[Ye,(0,l.Wm)(c,null,{default:(0,l.w5)((()=>[(0,l.Wm)(d,{class:"inputBox",value:s.form.username,"onUpdate:value":e[0]||(e[0]=t=>s.form.username=t),placeholder:"请输入用户名"},null,8,["value"])])),_:1}),(0,l.Wm)(c,null,{default:(0,l.w5)((()=>[(0,l.Wm)(u,{class:"inputBox",value:s.form.password,"onUpdate:value":e[1]||(e[1]=t=>s.form.password=t),placeholder:"请输入密码"},null,8,["value"])])),_:1}),(0,l.Wm)(c,null,{default:(0,l.w5)((()=>[(0,l.Wm)(g,{type:"primary",onClick:s.onSubmit,block:""},{default:(0,l.w5)((()=>[(0,l.Uk)("登录")])),_:1},8,["onClick"]),(0,l.Wm)(g,{type:"default",onClick:s.changeLog,block:"",style:{"margin-top":"10px"}},{default:(0,l.w5)((()=>[(0,l.Uk)("注册")])),_:1},8,["onClick"])])),_:1})])),_:1},8,["model"])],512),[[o.F8,s.ifLogin]]),(0,l.wy)((0,l._)("div",Fe,[(0,l.Wm)(h,{ref:"formLog",model:s.formLog},{default:(0,l.w5)((()=>[$e,(0,l.Wm)(c,{label:"用户名"},{default:(0,l.w5)((()=>[(0,l.Wm)(d,{value:s.formLog.username,"onUpdate:value":e[2]||(e[2]=t=>s.formLog.username=t),placeholder:"请输入用户名",style:{width:"485px",float:"right"}},null,8,["value"])])),_:1}),(0,l.Wm)(c,{label:"密码"},{default:(0,l.w5)((()=>[(0,l.Wm)(u,{value:s.formLog.password,"onUpdate:value":e[3]||(e[3]=t=>s.formLog.password=t),placeholder:"请输入密码",style:{width:"485px",float:"right"}},null,8,["value"])])),_:1}),(0,l.Wm)(c,{label:"确认密码"},{default:(0,l.w5)((()=>[(0,l.Wm)(u,{value:s.formLog.passwordConfirm,"onUpdate:value":e[4]||(e[4]=t=>s.formLog.passwordConfirm=t),placeholder:"确认密码",style:{width:"485px",float:"right"}},null,8,["value"])])),_:1}),(0,l.Wm)(c,null,{default:(0,l.w5)((()=>[(0,l.Wm)(g,{type:"primary",onClick:s.onLog,block:""},{default:(0,l.w5)((()=>[(0,l.Uk)("确认注册")])),_:1},8,["onClick"])])),_:1})])),_:1},8,["model"])],512),[[o.F8,!s.ifLogin]])])}var Ge={name:"login",setup(){let t=(0,r.iH)({username:null,password:null}),e=(0,r.iH)({username:null,password:null,passwordConfirm:null}),a=(0,r.iH)(!0);const o=(0,m.tv)();function l(){tt.Z.post("http://127.0.0.1:8000/api/test_login_info",t.value).then((e=>{console.log(e),1==e.data.result?f.ZP.success("登陆成功，2s后跳转至组件介绍页面",2,(()=>{p.Z.set("username",t.value.username),o.push({path:"/Introduction"})})):f.ZP.error("用户名或密码错误，请重新输入",2)}))}function s(){a.value=!1}function n(){console.log(e.value),tt.Z.post("http://127.0.0.1:8000/api/log",e.value).then((t=>{console.log(t),1==t.data.result?f.ZP.success("注册成功，2s后跳转至登陆页面",2,(()=>{a.value=!0})):f.ZP.error("用户名已存在，请重新输入",2)}))}return{form:t,formLog:e,ifLogin:a,onSubmit:l,changeLog:s,onLog:n}}};const Je=(0,k.Z)(Ge,[["render",Qe]]);var Xe=Je;const ta=[{path:"/homeView",name:"homeView",component:gt,meta:{keepAlive:!0}},{path:"/Introduction",name:"Introduction",component:Ie,meta:{keepAlive:!0}},{path:"/testModal",name:"testModal",component:Be,meta:{keepAlive:!0}},{path:"/",name:"Initial",component:Xe}],ea=(0,m.p7)({history:(0,m.PO)("/"),routes:ta});var aa=ea,oa=a(80125),la=(a(62467),a(78421)),sa=(a(54415),a(94366)),na=a(82721);const ia=(0,o.ri)(y);ia.use(la.Z).use(X.ZP,{name:"menus"}).use(aa).use(oa.ZP).component("ECharts",na.ZP);const da=sa;for(const ca in da)ia.component(ca,da[ca]);ia.mount("#app")}},e={};function a(o){var l=e[o];if(void 0!==l)return l.exports;var s=e[o]={exports:{}};return t[o].call(s.exports,s,s.exports,a),s.exports}a.m=t,function(){var t=[];a.O=function(e,o,l,s){if(!o){var n=1/0;for(u=0;u<t.length;u++){o=t[u][0],l=t[u][1],s=t[u][2];for(var i=!0,d=0;d<o.length;d++)(!1&s||n>=s)&&Object.keys(a.O).every((function(t){return a.O[t](o[d])}))?o.splice(d--,1):(i=!1,s<n&&(n=s));if(i){t.splice(u--,1);var c=l();void 0!==c&&(e=c)}}return e}s=s||0;for(var u=t.length;u>0&&t[u-1][2]>s;u--)t[u]=t[u-1];t[u]=[o,l,s]}}(),function(){a.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return a.d(e,{a:e}),e}}(),function(){a.d=function(t,e){for(var o in e)a.o(e,o)&&!a.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})}}(),function(){a.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"===typeof window)return window}}()}(),function(){a.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)}}(),function(){a.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}}(),function(){a.p="/"}(),function(){var t={143:0};a.O.j=function(e){return 0===t[e]};var e=function(e,o){var l,s,n=o[0],i=o[1],d=o[2],c=0;if(n.some((function(e){return 0!==t[e]}))){for(l in i)a.o(i,l)&&(a.m[l]=i[l]);if(d)var u=d(a)}for(e&&e(o);c<n.length;c++)s=n[c],a.o(t,s)&&t[s]&&t[s][0](),t[s]=0;return a.O(u)},o=self["webpackChunkfrontend"]=self["webpackChunkfrontend"]||[];o.forEach(e.bind(null,0)),o.push=e.bind(null,o.push.bind(o))}();var o=a.O(void 0,[998],(function(){return a(74638)}));o=a.O(o)})();
//# sourceMappingURL=app.db21526f.js.map